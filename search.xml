<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GnuPG 生成ECC密钥</title>
    <url>/blog/2022/08/16/GnuPG-%E7%94%9F%E6%88%90ECC%E5%AF%86%E9%92%A5/</url>
    <content><![CDATA[<h1 id="GnuPG简介"><a href="#GnuPG简介" class="headerlink" title="GnuPG简介"></a>GnuPG简介</h1><p>GNU Privacy Guard（GnuPG或GPG）是一种加密软件，它是PGP加密软件的满足GPL的替代物。 GnuPG依照由IETF订定的OpenPGP技术标准设计。GnuPG用于加密、数字签名及产生非对称钥匙对的软件。 具体简介可以看：<a href="https://baike.baidu.com/item/GnuPG">https://baike.baidu.com/item/GnuPG</a></p>
<p>如果你想尝试其中的一些功能，可以试试我开发的网页版的完全兼容GnuPG的加密程序OpenPGP-Web：<a href="https://longhao-chen.github.io/pgpweb/">https://Longhao-Chen.github.io/pgpweb/</a></p>
<span id="more"></span>
<h1 id="ECC简介"><a href="#ECC简介" class="headerlink" title="ECC简介"></a>ECC简介</h1><p>ECC是椭圆曲线密码学的缩写，一种建立公开密钥加密的演算法，基于椭圆曲线数学。椭圆曲线在密码学中的使用是在1985年由Neal Koblitz和Victor Miller分别独立提出的。 ECC的主要优势是在某些情况下它比其他的方法使用更小的密钥——比如RSA加密算法——提供相当的或更高等级的安全。 具体简介可以看：<a href="https://baike.baidu.com/item/%E6%A4%AD%E5%9C%86%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/10305582">https://baike.baidu.com/item/%E6%A4%AD%E5%9C%86%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/10305582</a></p>
<p>算法原理可以看：<a href="https://zhuanlan.zhihu.com/p/36326221">https://zhuanlan.zhihu.com/p/36326221</a></p>
<h1 id="GnuPG生成ECC密钥"><a href="#GnuPG生成ECC密钥" class="headerlink" title="GnuPG生成ECC密钥"></a>GnuPG生成ECC密钥</h1><p>因为ECC是一种比较新的算法，在gpg默认的密钥生成菜单中并不包含ECC密钥，如果需要生成ECC密钥， 则需要启用专家模式。</p>
<p>执行命令：<code>gpg –full-gen-key –expert</code></p>
<p>会返回:</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">gpg (GnuPG) <span class="number">2</span>.<span class="number">2</span>.<span class="number">12</span><span class="comment">; Copyright (C) 2018 Free Software Foundation, Inc.</span></span><br><span class="line">This is free software: you are free to change <span class="keyword">and </span>redistribute it.</span><br><span class="line">There is NO WARRANTY, to the <span class="keyword">extent </span>permitted <span class="keyword">by </span>law.</span><br><span class="line"></span><br><span class="line">请选择您要使用的密钥类型：</span><br><span class="line">   (<span class="number">1</span>) RSA 和 RSA （默认）</span><br><span class="line">   (<span class="number">2</span>) DSA 和 Elgamal</span><br><span class="line">   (<span class="number">3</span>) DSA（仅用于签名）</span><br><span class="line">   (<span class="number">4</span>) RSA（仅用于签名）</span><br><span class="line">   (<span class="number">7</span>) DSA（自定义用途）</span><br><span class="line">   (<span class="number">8</span>) RSA（自定义用途）</span><br><span class="line">   (<span class="number">9</span>) <span class="built_in">ECC</span> 和 <span class="built_in">ECC</span></span><br><span class="line">(<span class="number">10</span>) <span class="built_in">ECC</span>（仅用于签名）</span><br><span class="line">(<span class="number">11</span>) <span class="built_in">ECC</span>（自定义用途）</span><br><span class="line">(<span class="number">13</span>) 现存的密钥</span><br><span class="line">您的选择是？</span><br></pre></td></tr></table></figure>
<p>9,10,11即为生成ECC密钥。我们选择 (9) ECC 和 ECC</p>
<p>然后就会进入曲线选择菜单</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">请选择您想要使用的椭圆曲线：</span><br><span class="line">   (<span class="number">1</span>) Curve <span class="number">25519</span></span><br><span class="line">   (<span class="number">3</span>) NIST <span class="selector-tag">P</span>-<span class="number">256</span></span><br><span class="line">   (<span class="number">4</span>) NIST <span class="selector-tag">P</span>-<span class="number">384</span></span><br><span class="line">   (<span class="number">5</span>) NIST <span class="selector-tag">P</span>-<span class="number">521</span></span><br><span class="line">   (<span class="number">6</span>) Brainpool <span class="selector-tag">P</span>-<span class="number">256</span></span><br><span class="line">   (<span class="number">7</span>) Brainpool <span class="selector-tag">P</span>-<span class="number">384</span></span><br><span class="line">   (<span class="number">8</span>) Brainpool <span class="selector-tag">P</span>-<span class="number">512</span></span><br><span class="line">   (<span class="number">9</span>) secp256k1</span><br><span class="line">您的选择是？</span><br></pre></td></tr></table></figure>
<p>这里我推荐使用 (1) Curve 25519</p>
<blockquote>
<p>Note:<br>关于Curve 25519可以参见：<a href="https://www.zhihu.com/question/290541183/answer/529676502">https://www.zhihu.com/question/290541183/answer/529676502</a></p>
</blockquote>
<p>接下来就和创建普通RSA密钥差不多，按照说明去填即可。</p>
]]></content>
      <categories>
        <category>计算机</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
        <tag>GnuPG</tag>
      </tags>
  </entry>
  <entry>
    <title>Julia 求解微分方程</title>
    <url>/blog/2022/08/16/Julia-%E6%B1%82%E8%A7%A3%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/</url>
    <content><![CDATA[<p>本文为使用 <code>DifferentialEquations.jl</code> 求解微分方程的一个例子。</p>
<span id="more"></span>

<h1 id="安装求解器"><a href="#安装求解器" class="headerlink" title="安装求解器"></a>安装求解器</h1><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">]<span class="built_in">add</span> DifferentialEquations</span><br></pre></td></tr></table></figure>
<p>为方便绘图，建议安装 <code>Plots.jl</code> 这个包</p>
<h1 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h1><p>在这个实例中，我们将求解方程<br>$$<br>\begin{cases}<br>\frac{\rm du}{\rm dt}&#x3D;1.01u\\<br>u(0)&#x3D;0.5<br>\end{cases}<br>$$</p>
<h2 id="定义问题"><a href="#定义问题" class="headerlink" title="定义问题"></a>定义问题</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> eq!(du, u, p, t)</span><br><span class="line">    du = p*u</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">u0 = <span class="number">0.5</span></span><br><span class="line">p = <span class="number">1.01</span>  <span class="comment">//传入的参数</span></span><br><span class="line">tspan = (<span class="number">0.0</span>,<span class="number">1.0</span>)  <span class="comment">//求解的时间区间</span></span><br><span class="line">prob = <span class="constructor">ODEProblem(<span class="params">eq</span>!,<span class="params">u0</span>,<span class="params">tspan</span>,<span class="params">p</span>)</span></span><br></pre></td></tr></table></figure>

<h2 id="求解及求解器参数"><a href="#求解及求解器参数" class="headerlink" title="求解及求解器参数"></a>求解及求解器参数</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">//直接求解</span></span><br><span class="line">sol = <span class="built_in">solve</span>(prob)</span><br><span class="line"></span><br><span class="line"><span class="comment">//相对误差控制在1e-6以内</span></span><br><span class="line">sol = <span class="built_in">solve</span>(prob,reltol=<span class="number">1</span>e-<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//每隔0.1个时间点保存一次，此参数 也可传入一个要保存点的数组</span></span><br><span class="line">sol = <span class="built_in">solve</span>(prob,saveat=<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//只保存端点值</span></span><br><span class="line">sol = <span class="built_in">solve</span>(prob,save_everystep=false)</span><br><span class="line"></span><br><span class="line"><span class="comment">//必须求解1.0, 1.5, 2.0这几个点，此参数可以与 saveat 连用，也可以帮助处理方程不连续</span></span><br><span class="line">sol = <span class="built_in">solve</span>(prob,tstops=<span class="selector-attr">[1.0, 1.5, 2.0]</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//插值只使用一阶插值，默认为三阶，因为有一些阶三阶导数不连续</span></span><br><span class="line">sol = <span class="built_in">solve</span>(prob,dense=false)</span><br></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><p>绘图需要使用 <code>Plots.jl</code> 这个包</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">//直接绘图</span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(sol)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//只使用一阶插值绘图，默认为三阶插值</span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(sol,denseplot=false)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//只绘制0-1s这个时间段</span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(sol, tspan=(<span class="number">0.0</span>,<span class="number">1.0</span>)</span></span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//只绘制解中第一个变量，这对于微分方程组有用</span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(sol,vars=[<span class="number">1</span>])</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制之后保存图片</span></span><br><span class="line"><span class="function"><span class="title">savefig</span><span class="params">(<span class="string">&quot;myplot.png&quot;</span>)</span></span></span><br></pre></td></tr></table></figure>
<h2 id="查看解"><a href="#查看解" class="headerlink" title="查看解"></a>查看解</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获得在t处的解值</span></span><br><span class="line"><span class="function"><span class="title">sol</span><span class="params">(t)</span></span></span><br></pre></td></tr></table></figure>

<h1 id="更多例子及用法"><a href="#更多例子及用法" class="headerlink" title="更多例子及用法"></a>更多例子及用法</h1><p>参考官方文档：<a href="https://diffeq.sciml.ai/stable/">https://diffeq.sciml.ai/stable/</a></p>
]]></content>
      <categories>
        <category>计算机</category>
        <category>数值计算</category>
      </categories>
      <tags>
        <tag>数值计算</tag>
        <tag>数学</tag>
        <tag>物理学</tag>
        <tag>微分方程</tag>
        <tag>Julia</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+mathjax 换行问题</title>
    <url>/blog/2022/08/16/hexo-mathjax-%E6%8D%A2%E8%A1%8C%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>在<code>hexo</code>中写公式一般是用<code>LaTex</code>写然后利用<code>Mathjax</code>进行渲染显示，但是当编写多行公式的时候，直接使用<code>\\</code>换行的方法失效，需要使用另外的一些方法进行换行。这里我给出一些换行的例子。</p>
<span id="more"></span>
<h1 id="直接换行"><a href="#直接换行" class="headerlink" title="直接换行"></a>直接换行</h1><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">\begin</span><span class="template-variable">&#123;align&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">a_</span><span class="template-variable">&#123;11&#125;</span><span class="language-xml">&amp; =b_</span><span class="template-variable">&#123;11&#125;</span><span class="language-xml">\\\\</span></span><br><span class="line"><span class="language-xml">a_</span><span class="template-variable">&#123;22&#125;</span><span class="language-xml">&amp; =b_</span><span class="template-variable">&#123;22&#125;</span><span class="language-xml">+c_</span><span class="template-variable">&#123;22&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">\end</span><span class="template-variable">&#123;align&#125;</span></span><br></pre></td></tr></table></figure>
<p>效果：<br>$$<br>\begin{align}<br>a_{11}&amp; &#x3D;b_{11}\\<br>a_{22}&amp; &#x3D;b_{22}+c_{22}<br>\end{align}<br>$$</p>
<h1 id="使用大括号"><a href="#使用大括号" class="headerlink" title="使用大括号"></a>使用大括号</h1><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">\begin</span><span class="template-variable">&#123;cases&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">a_</span><span class="template-variable">&#123;11&#125;</span><span class="language-xml">&amp; =b_</span><span class="template-variable">&#123;11&#125;</span><span class="language-xml">\\\\</span></span><br><span class="line"><span class="language-xml">a_</span><span class="template-variable">&#123;22&#125;</span><span class="language-xml">&amp; =b_</span><span class="template-variable">&#123;22&#125;</span><span class="language-xml">+c_</span><span class="template-variable">&#123;22&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">\end</span><span class="template-variable">&#123;cases&#125;</span></span><br></pre></td></tr></table></figure>
<p>效果：<br>$$<br>\begin{cases}<br>a_{11}&amp; &#x3D;b_{11}\\<br>a_{22}&amp; &#x3D;b_{22}+c_{22}<br>\end{cases}<br>$$</p>
<p>以上是我现在正在使用的两种方法，如果有更好的解决方案，欢迎在评论区提出。</p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>LaTex</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>LUKS设备使用说明</title>
    <url>/blog/2022/08/16/LUKS%E8%AE%BE%E5%A4%87%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<p>LUKS （Linux Unified Key Setup）是 Linux 硬盘加密的标准。我们可以使用这个来加密 Linux 下的分区。</p>
<span id="more"></span>
<h1 id="创建一个LUKS设备"><a href="#创建一个LUKS设备" class="headerlink" title="创建一个LUKS设备"></a>创建一个LUKS设备</h1><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">cryptsetup</span> -y luksFormat 设备名</span><br></pre></td></tr></table></figure>
<p><strong>注意：yes确认需要大写</strong></p>
<h1 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h1><p>假设设备名为<code>/dev/sdb1</code></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo cryptsetup open <span class="regexp">/dev/</span>sdb1 data</span><br></pre></td></tr></table></figure>
<p>现在我们就可以使用解密后的块设备 <code>/dev/mapper/data</code></p>
<p>注意： 如果显示创建回环设备失败，可以尝试 <code>modprobe loop</code></p>
<h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">sudo</span> cryptsetup close <span class="class"><span class="keyword">data</span></span></span><br></pre></td></tr></table></figure>

<h1 id="修改口令"><a href="#修改口令" class="headerlink" title="修改口令"></a>修改口令</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">sudo cryptsetup luksChangeKey <span class="tag">&lt;<span class="name">device</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="查看信息和口令添加移除操作"><a href="#查看信息和口令添加移除操作" class="headerlink" title="查看信息和口令添加移除操作"></a>查看信息和口令添加移除操作</h1><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo cryptsetup luksDump <span class="regexp">/dev/</span>sdb1</span><br><span class="line">sudo cryptsetup luksAddKey <span class="regexp">/dev/</span>sdb1</span><br><span class="line">sudo cryptsetup luksRemoveKey <span class="regexp">/dev/</span>sdb1</span><br><span class="line">sudo cryptsetup status data</span><br></pre></td></tr></table></figure>

<h1 id="备份和恢复luksHeader"><a href="#备份和恢复luksHeader" class="headerlink" title="备份和恢复luksHeader"></a>备份和恢复luksHeader</h1><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">sudo cryptsetup luksHeaderBackup <span class="symbol">&lt;device&gt;</span> --header-backup-<span class="keyword">file</span> <span class="symbol">&lt;file&gt;</span></span><br><span class="line">sudo cryptsetup luksHeaderRestore <span class="symbol">&lt;device&gt;</span> --header-backup-<span class="keyword">file</span> <span class="symbol">&lt;file&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="擦除密钥头"><a href="#擦除密钥头" class="headerlink" title="擦除密钥头"></a>擦除密钥头</h1><p>这会造成设备无法访问</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">sudo cryptsetup <span class="built_in">erase</span> &lt;device&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 常用命令</title>
    <url>/blog/2022/08/17/hexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="center">用途</th>
<th>命令</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">新建草稿</td>
<td><code>hexo new draft &#39;标题&#39;</code></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">发布草稿</td>
<td><code>hexo publish draft &#39;标题&#39;</code></td>
<td align="center">会根据文章模板自动补充时间等信息</td>
</tr>
<tr>
<td align="center">启动本地服务器</td>
<td><code>hexo s</code></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">启动本地服务器并加载草稿</td>
<td><code>hexo s --drafts</code></td>
<td align="center">如果草稿没有设置时间，默认时间为UNIX时间戳0时</td>
</tr>
<tr>
<td align="center">生成并部署网页</td>
<td><code>hexo g -d</code></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">清理缓存</td>
<td><code>hexo clean</code></td>
<td align="center">建议在进行比较大修改后运行此命令</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>群的基本概念(1)</title>
    <url>/blog/2022/08/17/%E7%BE%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5(1)/</url>
    <content><![CDATA[<p>这里主要给出一些群的基本概念：群、群的划分、同构和同态，便于查阅。可能会不定时更新。</p>
<span id="more"></span>
<h1 id="群"><a href="#群" class="headerlink" title="群"></a>群</h1><h2 id="群的一种定义"><a href="#群的一种定义" class="headerlink" title="群的一种定义"></a>群的一种定义</h2><p>一个非空集合$G$对于一个叫乘法的代数运算叫做一个群，如果</p>
<ol>
<li>$G$对这个乘法来说是封闭的.</li>
<li>结合律成立:<br>$$<br>a(bc)&#x3D;(ab)c<br>$$<br>对任意$G$中三个元素都成立.</li>
<li>有唯一的单位元素$e$，使得对$\forall f\in G$，有$ef&#x3D;fe&#x3D;f$</li>
<li>对$\forall f\in G$，存在且唯一存在$f^{-1}\in G$，使得$f^{-1}f&#x3D;ff^{-1}&#x3D;e$.</li>
</ol>
<h2 id="群的另外一种定义"><a href="#群的另外一种定义" class="headerlink" title="群的另外一种定义"></a>群的另外一种定义</h2><p>一个非空集合$G$对于一个叫乘法的代数运算叫做一个群，如果</p>
<ol>
<li>$G$对这个乘法来说是封闭的.</li>
<li>结合律成立:<br>$$<br>a(bc)&#x3D;(ab)c<br>$$<br>对任意$G$中三个元素都成立.</li>
<li>$\forall a,b \in G$，方程<br>$$<br>ax&#x3D;b\ 和\ ya&#x3D;b<br>$$<br>在$G$中有解.</li>
</ol>
<h2 id="有限群的另外一种定义"><a href="#有限群的另外一种定义" class="headerlink" title="有限群的另外一种定义"></a>有限群的另外一种定义</h2><p>一个有乘法的<strong>有限非空</strong>集合$G$形成一个群，假如</p>
<ol>
<li>$G$对这个乘法来说是封闭的.</li>
<li>结合律成立:<br>$$<br>a(bc)&#x3D;(ab)c<br>$$<br>对任意$G$中三个元素都成立.</li>
<li>消去律：<br>若$ax&#x3D;ax’$，那么$x&#x3D;x’$,<br>若$ya&#x3D;y’a$，那么$y&#x3D;y’$.</li>
</ol>
<p>被满足.</p>
<h2 id="有限群与无限群"><a href="#有限群与无限群" class="headerlink" title="有限群与无限群"></a>有限群与无限群</h2><p>一个群叫有限群，假如这个群元的个数为一个有限整数，否则这个群叫无限群.一个有限群的元素个数称为这个群的阶.</p>
<h2 id="交换群（Abel-群）"><a href="#交换群（Abel-群）" class="headerlink" title="交换群（Abel 群）"></a>交换群（Abel 群）</h2><p>一个群叫交换群，假如<br>$$<br>ab&#x3D;ba<br>$$<br>对于$\forall a,b \in G$成立.</p>
<ul>
<li>易得，交换群的乘法表关于对角线对称.</li>
</ul>
<h2 id="子群"><a href="#子群" class="headerlink" title="子群"></a>子群</h2><p>设$H$是$G$的一个子群，若$H$是$G$的一个子集，且对$G$相同的乘法运算也构成一个群.</p>
<p>一个不空子集为子群的充要条件为:</p>
<ol>
<li>封闭性.</li>
<li>每个元素有唯一逆元.</li>
</ol>
<p>一个不空有限子集为子群的充要条件为:</p>
<ol>
<li>封闭性.</li>
</ol>
<ul>
<li>群$G$的非平庸子群称为固有子群.</li>
</ul>
<h2 id="S-生成的子群"><a href="#S-生成的子群" class="headerlink" title="$S$生成的子群"></a>$S$生成的子群</h2><p>$S$是$G$中的一个任意非空子集，一个集合$H$恰好包含了$S$的元及其逆元所形成的各种乘积，则$H$形成$G$的一个子群，称为$S$生成的子群，记作$(S)$.</p>
<h1 id="群的划分"><a href="#群的划分" class="headerlink" title="群的划分"></a>群的划分</h1><h2 id="陪集"><a href="#陪集" class="headerlink" title="陪集"></a>陪集</h2><p>$H$是$G$的子群，由固定的$g\in G$，可得<br>$H$的左陪集$gH&#x3D;\{gh_\alpha|h_\alpha\in H\}$<br>$H$的右陪集$Hg&#x3D;\{h_\alpha g|h_\alpha\in H\}$</p>
<ul>
<li>一个子群的左右陪集个数相等.</li>
</ul>
<h3 id="指数"><a href="#指数" class="headerlink" title="指数"></a>指数</h3><p>$G$的一个子群$H$的右陪集（或左陪集）的个数称为子群$H$在$G$里的指数，记作$[G:H]$.</p>
<p>可以证明：<br>$$<br>[G:H]&#x3D;\frac{|G|}{|H|}<br>$$</p>
<h3 id="陪集定理"><a href="#陪集定理" class="headerlink" title="陪集定理"></a>陪集定理</h3><p>一个子群的左右陪集要么完全相同，要么没有任何公共元素.</p>
<h3 id="Lagrange-定理"><a href="#Lagrange-定理" class="headerlink" title="Lagrange 定理"></a>Lagrange 定理</h3><p>有限群子群的阶必为群阶的因子，即:<br>$$<br>|G|&#x3D;|H|[G:H]<br>$$</p>
<h2 id="不变子群"><a href="#不变子群" class="headerlink" title="不变子群"></a>不变子群</h2><p>$G$的一个子群$N$叫做哟个不变子群，假如对于$G$的每一个元$a$来说，都有<br>$$<br>Na&#x3D;aN<br>$$<br>不变子群的一个左（右）陪集叫做这个子群的陪集.</p>
<h2 id="G-的中心"><a href="#G-的中心" class="headerlink" title="$G$的中心"></a>$G$的中心</h2><p>包含群$G$所有满足以下性质的元$n$的子群叫做$G$的中心:<br>$$<br>na&#x3D;an,\ \forall a \in G<br>$$</p>
<h2 id="共轭与类"><a href="#共轭与类" class="headerlink" title="共轭与类"></a>共轭与类</h2><h3 id="共轭"><a href="#共轭" class="headerlink" title="共轭"></a>共轭</h3><p>对于$f,h\in G$，如果在$G$中存在一个$g$，使得$f,h$满足$gfg^{-1}&#x3D;h$，则称$f,h$共轭，记作$f\sim h$.</p>
<h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>$G$中所有相互共轭元素形成的集合称为$G$的一个类.</p>
<ul>
<li>有限群中每个类中元素的个数都是群阶的因子.</li>
</ul>
<h2 id="正规子群（不变子群）"><a href="#正规子群（不变子群）" class="headerlink" title="正规子群（不变子群）"></a>正规子群（不变子群）</h2><p>群$G$的子群$H$有$\forall a\in G, aH&#x3D;Ha$，则子群$H$称为$G$的正规子群，记作$H\triangleleft G$.</p>
<p>也可说$H$中所有同类元素属于$H$，则称$H$是$G$的正规子群.</p>
<h2 id="商集和商群"><a href="#商集和商群" class="headerlink" title="商集和商群"></a>商集和商群</h2><h3 id="左右商集的定义"><a href="#左右商集的定义" class="headerlink" title="左右商集的定义"></a>左右商集的定义</h3><p>左商集：$(G&#x2F;H)_l&#x3D;\{aH|a\in G\}$，右商集：$(G&#x2F;H)_r&#x3D;\{Ha|a\in G\}$</p>
<p>事实上左右商集之间可以建立一一映射.</p>
<p>由商集的定义可知，正规子群就是左右商集相等的子群.</p>
<h3 id="集合的乘法"><a href="#集合的乘法" class="headerlink" title="集合的乘法"></a>集合的乘法</h3><p>对于$G$的子集$H,K$，定义<br>$$<br>HK&#x3D;\{hk|h\in H,k\in K\}<br>$$</p>
<p>可以证明集合乘法满足结合律.</p>
<h3 id="商群定义"><a href="#商群定义" class="headerlink" title="商群定义"></a>商群定义</h3><p>商集在集合乘法构成的群称为商群，即：<br>$$<br>G&#x2F;H&#x3D;\{aH|a\in G,H\triangleleft G\}<br>$$<br>乘法为:$(aH)(bH)&#x3D;(ab)H$</p>
<ul>
<li>商群中的元素是陪集，也就是说商集是“集合的集合”.</li>
<li>一个群$G$与它的每一个商群$G&#x2F;N$同态.</li>
</ul>
<h1 id="群的同构与自同构"><a href="#群的同构与自同构" class="headerlink" title="群的同构与自同构"></a>群的同构与自同构</h1><h2 id="群的同构"><a href="#群的同构" class="headerlink" title="群的同构"></a>群的同构</h2><p>若从群$G$到群$F$上，存在<strong>一一对应的满映射</strong>$\Phi$，对于$\forall a,b\in G$，如果:<br>$$<br>a\longrightarrow \overline{a},b\longrightarrow \overline{b}<br>$$<br>那么有<br>$$<br>a\circ b\longrightarrow \overline a \overline\circ\overline b<br>$$<br>则称群$G$与群$F$同构，记作$G\cong F$。映射$\Phi$称为同构映射。</p>
<h2 id="自同构映射"><a href="#自同构映射" class="headerlink" title="自同构映射"></a>自同构映射</h2><p>群$G$到自身的自同构映射记为$\nu$，对$\forall g_\alpha \in G$，有$\nu(g_\alpha)\in G$且$\nu(g_\alpha g_\beta)&#x3D;\nu(g_\alpha)\nu(g_\beta)$.</p>
<h2 id="自同构群"><a href="#自同构群" class="headerlink" title="自同构群"></a>自同构群</h2><p>群$G$的所有自同构映射形成一个群，称为$G$的自同构群，记作$A(G)$.<br>$A(G)$的子群称为 一个自同构群.</p>
<h2 id="内自同构映射"><a href="#内自同构映射" class="headerlink" title="内自同构映射"></a>内自同构映射</h2><p>一个映射$\phi$称为$G$内自同构映射，当<br>$$<br>\phi:\ x\longrightarrow gxg^{-1}<br>$$<br>对于$\forall x\in G$成立，$g\in G$</p>
<h2 id="内自同构群"><a href="#内自同构群" class="headerlink" title="内自同构群"></a>内自同构群</h2><p>群$G$的所有内自同构映射形成一个群，称为$G$的内自同构群，记作$I(G)$.</p>
<ul>
<li>内自同构映射群为自同构群的不变子群.</li>
<li>交换群的内自同构群是平凡的.</li>
</ul>
<h1 id="群的同态"><a href="#群的同态" class="headerlink" title="群的同态"></a>群的同态</h1><h2 id="同态映射"><a href="#同态映射" class="headerlink" title="同态映射"></a>同态映射</h2><p>一个从$A$到$\overline{A}$的映射$\phi$，对于代数运算$\circ$和$\overline{\circ}$来说 称为$A$到$\overline{A}$的一个同态映射，如果:<br>$$<br>a\longrightarrow \overline{a},b\longrightarrow \overline{b}<br>$$<br>那么<br>$$<br>a\circ b\longrightarrow \overline a \overline\circ\overline b<br>$$</p>
<h2 id="同态核"><a href="#同态核" class="headerlink" title="同态核"></a>同态核</h2><p>设$G$与$F$同态，那么$G$中与$F$中单位元素对应的所有元素的集合称为同态核.</p>
<h2 id="同态核定理"><a href="#同态核定理" class="headerlink" title="同态核定理"></a>同态核定理</h2><p>设$G$与$F$同态，则有：</p>
<ol>
<li>同态核$H$是$G$的不变子群.</li>
<li>商群$G&#x2F;F$与$F$同构.</li>
</ol>
]]></content>
      <categories>
        <category>数学</category>
        <category>群论</category>
      </categories>
      <tags>
        <tag>群论</tag>
        <tag>抽象代数</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown常用语法</title>
    <url>/blog/2022/08/16/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>
<span id="more"></span>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p>
<p>注：在#后跟个空格再写文字。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h2><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><ul>
<li>加粗</li>
</ul>
<p>要加粗的文字左右分别用两个*号包起来</p>
<ul>
<li>斜体</li>
</ul>
<p>要倾斜的文字左右分别用一个*号包起来</p>
<ul>
<li>斜体加粗</li>
</ul>
<p>要倾斜和加粗的文字左右分别用三个*号包起来</p>
<ul>
<li>删除线</li>
</ul>
<p>要加删除线的文字左右分别用两个~~号包起来</p>
<h2 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h2><pre><code>**这是加粗的文字**
*这是倾斜的文字*`
***这是斜体加粗的文字***
~~这是加删除线的文字~~
</code></pre>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果:"></a>效果:</h2><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>&#96;<br><em><strong>这是斜体加粗的文字</strong></em><br><del>这是加删除线的文字</del></p>
<hr>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例:"></a>示例:</h2><pre><code>&gt;这是引用的内容
&gt;&gt;这是引用的内容
&gt;&gt;&gt;这是引用的内容
</code></pre>
<h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果:"></a>效果:</h2><blockquote>
<p>这是引用的内容</p>
<blockquote>
<p>这是引用的内容</p>
<blockquote>
<p>这是引用的内容</p>
</blockquote>
</blockquote>
</blockquote>
<hr>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>三个或者三个以上的 - 或者 * 都可以。</p>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例:"></a>示例:</h2><pre><code>---
***
</code></pre>
<h2 id="效果-2"><a href="#效果-2" class="headerlink" title="效果:"></a>效果:</h2><hr>
<hr>
<p>效果都一样。</p>
<hr>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例:"></a>示例:</h2><pre><code>[超链接名](超链接地址 &quot;超链接title&quot;)
注:title可加可不加。
例:
[CSPMRT](https://cspmrt.github.io &quot;CSPMT&quot;)
</code></pre>
<h2 id="效果-3"><a href="#效果-3" class="headerlink" title="效果:"></a>效果:</h2><h2 id="CSPMRT"><a href="#CSPMRT" class="headerlink" title="CSPMRT"></a><a href="https://cspmrt.github.io/" title="CSPMT">CSPMRT</a></h2><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>单行代码：代码之间分别用一个&#96;(反引号)包起来。</p>
<h2 id="例如"><a href="#例如" class="headerlink" title="例如:"></a>例如:</h2><pre><code>`代码`
</code></pre>
<p>多行代码:代码之间分别用三个反引号包起来，且两边的反引号单独占一行。</p>
<h2 id="示例-4"><a href="#示例-4" class="headerlink" title="示例:"></a>示例:</h2><pre><code>\```(实际使用去除\，这里是防止把反引号解析成代码块标记)
代码
\```(实际使用去除\，这里是防止把反引号解析成代码块标记)
</code></pre>
<h2 id="效果-4"><a href="#效果-4" class="headerlink" title="效果:"></a>效果:</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a><code>代码</code></h2><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h2 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h2><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">表头|<span class="string">表头</span>|<span class="string">表头</span></span><br><span class="line"><span class="string">---</span>|<span class="string">:--:</span>|<span class="string">---:</span></span><br><span class="line"><span class="string">内容</span>|<span class="string">内容</span>|<span class="string">内容</span>|</span><br><span class="line">内容|<span class="string">内容</span>|<span class="string">内容</span>|</span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br></pre></td></tr></table></figure>
<h2 id="效果-5"><a href="#效果-5" class="headerlink" title="效果:"></a>效果:</h2><table>
<thead>
<tr>
<th>表头</th>
<th align="center">表头</th>
<th align="right">表头</th>
</tr>
</thead>
<tbody><tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
<tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
</tbody></table>
<h1 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h1><p>这markdown中，空格使用<code>&amp;nbsp;</code>表示，注意<code>&amp;nbsp;</code>与文字之间有一个空格。</p>
<h2 id="示例-5"><a href="#示例-5" class="headerlink" title="示例:"></a>示例:</h2><pre><code>&amp;nbsp; 文字。
</code></pre>
<h2 id="效果-6"><a href="#效果-6" class="headerlink" title="效果:"></a>效果:</h2><h2 id="amp-nbsp-文字。"><a href="#amp-nbsp-文字。" class="headerlink" title="&amp;nbsp; 文字。"></a>&amp;nbsp; 文字。</h2><h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><ul>
<li>注意:代码前后记得一定要加 <code>$$</code> 或 <code>$</code> 才可以显示效果。<code>$$</code>中的公式会单独占据一行，<code>$</code>中的公式不会单独占据一行。</li>
</ul>
<h2 id="1-角标-和-开方："><a href="#1-角标-和-开方：" class="headerlink" title="1.角标 和 开方："></a>1.角标 和 开方：</h2><pre><code>$c = \sqrt&#123;a^&#123;2&#125;+b_&#123;xy&#125;^&#123;2&#125; +e^&#123;x&#125;&#125;$
</code></pre>
<h3 id="效果-7"><a href="#效果-7" class="headerlink" title="效果:"></a>效果:</h3><p>$c &#x3D; \sqrt{a^{2}+b_{xy}^{2} +e^{x}}$</p>
<h2 id="2-分数表达："><a href="#2-分数表达：" class="headerlink" title="2.分数表达："></a>2.分数表达：</h2><pre><code>$\frac&#123;x^&#123;2&#125;y^&#123;2&#125;&#125;&#123;x+y&#125;$
</code></pre>
<h3 id="效果-8"><a href="#效果-8" class="headerlink" title="效果:"></a>效果:</h3><p>$\frac{x^{2}y^{2}}{x+y}$</p>
<h2 id="3-求和与联乘："><a href="#3-求和与联乘：" class="headerlink" title="3.求和与联乘："></a>3.求和与联乘：</h2><pre><code>$$\sum_&#123;i=0&#125;^&#123;n&#125;$$
$$\prod_&#123;i=0&#125;^n \frac&#123;1&#125;&#123;i^2&#125;$$
</code></pre>
<h3 id="效果-9"><a href="#效果-9" class="headerlink" title="效果:"></a>效果:</h3><p>$$\sum_{i&#x3D;0}^{n}$$<br>$$\prod_{i&#x3D;0}^n \frac{1}{i^2}$$</p>
<h2 id="4-积分"><a href="#4-积分" class="headerlink" title="4.积分:"></a>4.积分:</h2><pre><code>$$\int_0^2 x^2 &#123;\rm d&#125;x$$
$$\iint_0^2 x^2 &#123;\rm d&#125;x$$
</code></pre>
<h3 id="效果-10"><a href="#效果-10" class="headerlink" title="效果:"></a>效果:</h3><p>$$\int_0^2 x^2 {\rm d}x$$<br>$$\iint_0^2 x^2 {\rm d}x$$</p>
<h2 id="5-极限"><a href="#5-极限" class="headerlink" title="5.极限:"></a>5.极限:</h2><pre><code>$$\lim\limits_&#123;n \rightarrow +\infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125;$$
</code></pre>
<h3 id="效果-11"><a href="#效果-11" class="headerlink" title="效果:"></a>效果:</h3><p>$$\lim\limits_{n \rightarrow +\infty} \frac{1}{n(n+1)}$$</p>
<h2 id="6-矢量"><a href="#6-矢量" class="headerlink" title="6.矢量:"></a>6.矢量:</h2><pre><code>$$\vec&#123; a &#125;$$
</code></pre>
<h3 id="效果-12"><a href="#效果-12" class="headerlink" title="效果:"></a>效果:</h3><p>$$\vec{ a }$$</p>
<h2 id="7-其他"><a href="#7-其他" class="headerlink" title="7.其他:"></a>7.其他:</h2><table>
<thead>
<tr>
<th align="center">效果</th>
<th align="center">代码</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$\pm$</td>
<td align="center"><code>\pm</code></td>
</tr>
<tr>
<td align="center">$\times$</td>
<td align="center"><code>\times</code></td>
</tr>
<tr>
<td align="center">$\div$</td>
<td align="center"><code>\div</code></td>
</tr>
<tr>
<td align="center">$\mid$</td>
<td align="center"><code>\mid</code></td>
</tr>
<tr>
<td align="center">$\nmid$</td>
<td align="center"><code>\nmid</code></td>
</tr>
<tr>
<td align="center">$\circ$</td>
<td align="center"><code>\circ</code></td>
</tr>
<tr>
<td align="center">$\leq$</td>
<td align="center"><code>\leq</code></td>
</tr>
<tr>
<td align="center">$\geq$</td>
<td align="center"><code>\geq</code></td>
</tr>
<tr>
<td align="center">$\neq$</td>
<td align="center"><code>\neq</code></td>
</tr>
<tr>
<td align="center">$\approx$</td>
<td align="center"><code>\approx</code></td>
</tr>
<tr>
<td align="center">$\equiv$</td>
<td align="center"><code>\equiv</code></td>
</tr>
<tr>
<td align="center">$\coprod$</td>
<td align="center"><code>\coprod</code></td>
</tr>
<tr>
<td align="center">$\emptyset$</td>
<td align="center"><code>\emptyset</code></td>
</tr>
<tr>
<td align="center">$\in$</td>
<td align="center"><code>\in</code></td>
</tr>
<tr>
<td align="center">$\notin$</td>
<td align="center"><code>\notin</code></td>
</tr>
<tr>
<td align="center">$\subset$</td>
<td align="center"><code>\subset</code></td>
</tr>
<tr>
<td align="center">$\supset$</td>
<td align="center"><code>\supset</code></td>
</tr>
<tr>
<td align="center">$\subseteq$</td>
<td align="center"><code>\subseteq</code></td>
</tr>
<tr>
<td align="center">$\supseteq$</td>
<td align="center"><code>\supseteq</code></td>
</tr>
<tr>
<td align="center">$\bigcap$</td>
<td align="center"><code>\bigcap</code></td>
</tr>
<tr>
<td align="center">$\bigcup$</td>
<td align="center"><code>\bigcup</code></td>
</tr>
<tr>
<td align="center">$\bigvee$</td>
<td align="center"><code>\bigvee</code></td>
</tr>
<tr>
<td align="center">$\bigwedge$</td>
<td align="center"><code>\bigwedge</code></td>
</tr>
<tr>
<td align="center">$\log$</td>
<td align="center"><code>\log</code></td>
</tr>
<tr>
<td align="center">$\lg$</td>
<td align="center"><code>\lg</code></td>
</tr>
<tr>
<td align="center">$\ln$</td>
<td align="center"><code>\ln</code></td>
</tr>
<tr>
<td align="center">$\bot$</td>
<td align="center"><code>\bot</code></td>
</tr>
<tr>
<td align="center">$\angle$</td>
<td align="center"><code>\angle</code></td>
</tr>
<tr>
<td align="center">$30^\circ$</td>
<td align="center"><code>30^\circ</code></td>
</tr>
<tr>
<td align="center">$\prime$</td>
<td align="center"><code>\prime</code></td>
</tr>
<tr>
<td align="center">$\iiint$</td>
<td align="center"><code>\iiint</code></td>
</tr>
<tr>
<td align="center">$\oint$</td>
<td align="center"><code>\oint</code></td>
</tr>
<tr>
<td align="center">$\infty$</td>
<td align="center"><code>\infty</code></td>
</tr>
<tr>
<td align="center">$\nabla$</td>
<td align="center"><code>\nabla</code></td>
</tr>
<tr>
<td align="center">$\because$</td>
<td align="center"><code>\because</code></td>
</tr>
<tr>
<td align="center">$\therefore$</td>
<td align="center"><code>\therefore</code></td>
</tr>
<tr>
<td align="center">$\forall$</td>
<td align="center"><code>\forall</code></td>
</tr>
<tr>
<td align="center">$\exists$</td>
<td align="center"><code>\exists</code></td>
</tr>
<tr>
<td align="center">$\not&#x3D;$</td>
<td align="center"><code>\not=</code></td>
</tr>
<tr>
<td align="center">$\not&gt;$</td>
<td align="center"><code>\not&gt;</code></td>
</tr>
<tr>
<td align="center">$\not\subset$</td>
<td align="center"><code>\not\subset</code></td>
</tr>
<tr>
<td align="center">$\hat{y}$</td>
<td align="center"><code>\hat&#123;y&#125;</code></td>
</tr>
<tr>
<td align="center">$\check{y}$</td>
<td align="center"><code>\check&#123;y&#125;</code></td>
</tr>
<tr>
<td align="center">$\breve{y}$</td>
<td align="center"><code>\breve&#123;y&#125;</code></td>
</tr>
<tr>
<td align="center">$\overline{a+b+c+d}$</td>
<td align="center"><code>\overline&#123;a+b+c+d&#125;</code></td>
</tr>
<tr>
<td align="center">$\underline{a+b+c+d}$</td>
<td align="center"><code>\underline&#123;a+b+c+d&#125;</code></td>
</tr>
<tr>
<td align="center">$\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}$</td>
<td align="center"><code>\overbrace&#123;a+\underbrace&#123;b+c&#125;_&#123;1.0&#125;+d&#125;^&#123;2.0&#125;</code></td>
</tr>
<tr>
<td align="center">$\uparrow$</td>
<td align="center"><code>\uparrow</code></td>
</tr>
<tr>
<td align="center">$\downarrow$</td>
<td align="center"><code>\downarrow</code></td>
</tr>
<tr>
<td align="center">$\Uparrow$</td>
<td align="center"><code>\Uparrow</code></td>
</tr>
<tr>
<td align="center">$\Downarrow$</td>
<td align="center"><code>\Downarrow</code></td>
</tr>
<tr>
<td align="center">$\rightarrow$</td>
<td align="center"><code>\rightarrow</code></td>
</tr>
<tr>
<td align="center">$\leftarrow$</td>
<td align="center"><code>\leftarrow</code></td>
</tr>
<tr>
<td align="center">$\Rightarrow$</td>
<td align="center"><code>\Rightarrow</code></td>
</tr>
<tr>
<td align="center">$\Leftarrow$</td>
<td align="center"><code>\Leftarrow</code></td>
</tr>
<tr>
<td align="center">$\alpha$</td>
<td align="center"><code>\alpha</code></td>
</tr>
<tr>
<td align="center">$\beta$</td>
<td align="center"><code>\beta</code></td>
</tr>
<tr>
<td align="center">$\gamma$</td>
<td align="center"><code>\gamma</code></td>
</tr>
<tr>
<td align="center">$\Gamma$</td>
<td align="center"><code>\Gamma</code></td>
</tr>
<tr>
<td align="center">$\delta$</td>
<td align="center"><code>\delta</code></td>
</tr>
<tr>
<td align="center">$\Delta$</td>
<td align="center"><code>\Delta</code></td>
</tr>
<tr>
<td align="center">$\epsilon$</td>
<td align="center"><code>\epsilon</code></td>
</tr>
<tr>
<td align="center">$\varepsilon$</td>
<td align="center"><code>\varepsilon</code></td>
</tr>
<tr>
<td align="center">$\zeta$</td>
<td align="center"><code>\zeta</code></td>
</tr>
<tr>
<td align="center">$\eta$</td>
<td align="center"><code>\eta</code></td>
</tr>
<tr>
<td align="center">$\theta$</td>
<td align="center"><code>\theta</code></td>
</tr>
<tr>
<td align="center">$\Theta$</td>
<td align="center"><code>\Theta</code></td>
</tr>
<tr>
<td align="center">$\vartheta$</td>
<td align="center"><code>\vartheta</code></td>
</tr>
<tr>
<td align="center">$\iota$</td>
<td align="center"><code>\iota</code></td>
</tr>
<tr>
<td align="center">$\kappa$</td>
<td align="center"><code>\kappa</code></td>
</tr>
<tr>
<td align="center">$\lambda$</td>
<td align="center"><code>\lambda</code></td>
</tr>
<tr>
<td align="center">$\Lambda$</td>
<td align="center"><code>\Lambda</code></td>
</tr>
<tr>
<td align="center">$\mu$</td>
<td align="center"><code>\mu</code></td>
</tr>
<tr>
<td align="center">$\nu$</td>
<td align="center"><code>\nu</code></td>
</tr>
<tr>
<td align="center">$\xi$</td>
<td align="center"><code>\xi</code></td>
</tr>
<tr>
<td align="center">$\Xi$</td>
<td align="center"><code>\Xi</code></td>
</tr>
<tr>
<td align="center">$\pi$</td>
<td align="center"><code>\pi</code></td>
</tr>
<tr>
<td align="center">$\Pi$</td>
<td align="center"><code>\Pi</code></td>
</tr>
<tr>
<td align="center">$\varpi$</td>
<td align="center"><code>\varpi</code></td>
</tr>
<tr>
<td align="center">$\rho$</td>
<td align="center"><code>\rho</code></td>
</tr>
<tr>
<td align="center">$\varrho$</td>
<td align="center"><code>\varrho</code></td>
</tr>
<tr>
<td align="center">$\sigma$</td>
<td align="center"><code>\sigma</code></td>
</tr>
<tr>
<td align="center">$\Sigma$</td>
<td align="center"><code>\Sigma</code></td>
</tr>
<tr>
<td align="center">$\varsigma$</td>
<td align="center"><code>\varsigma</code></td>
</tr>
<tr>
<td align="center">$\tau$</td>
<td align="center"><code>\tau</code></td>
</tr>
<tr>
<td align="center">$\upsilon$</td>
<td align="center"><code>\upsilon</code></td>
</tr>
<tr>
<td align="center">$\Upsilon$</td>
<td align="center"><code>\Upsilon</code></td>
</tr>
<tr>
<td align="center">$\phi$</td>
<td align="center"><code>\phi</code></td>
</tr>
<tr>
<td align="center">$\Phi$</td>
<td align="center"><code>\Phi</code></td>
</tr>
<tr>
<td align="center">$\varphi$</td>
<td align="center"><code>\varphi</code></td>
</tr>
<tr>
<td align="center">$\chi$</td>
<td align="center"><code>\chi</code></td>
</tr>
<tr>
<td align="center">$\psi$</td>
<td align="center"><code>\psi</code></td>
</tr>
<tr>
<td align="center">$\Psi$</td>
<td align="center"><code>\Psi</code></td>
</tr>
<tr>
<td align="center">$\omega$</td>
<td align="center"><code>\omega</code></td>
</tr>
<tr>
<td align="center">$\Omega$</td>
<td align="center"><code>\Omega</code></td>
</tr>
<tr>
<td align="center">$\smile$</td>
<td align="center"><code>\smile</code></td>
</tr>
<tr>
<td align="center">$\frown$</td>
<td align="center"><code>\frown</code></td>
</tr>
<tr>
<td align="center">$\asymp$</td>
<td align="center"><code>\asymp</code></td>
</tr>
</tbody></table>
<hr>
<h1 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h1><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">文字</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> primary %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">primary</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> secondary %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">secondary</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> success %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">success</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> danger %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">danger</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> warning %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">warning</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> info %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">info</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> light %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">light</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h2><div class="note "><p>文字</p>
</div>

<div class="note primary"><p>primary</p>
</div>

<details class="note "><summary><p>secondary</p>
</summary>
<p>secondary</p>

</details>

<div class="note success"><p>success</p>
</div>

<div class="note danger"><p>danger</p>
</div>

<div class="note warning"><p>warning</p>
</div>

<div class="note info"><p>info</p>
</div>

<details class="note "><summary><p>light</p>
</summary>
<p>light</p>

</details>

<h1 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h1><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&#123;% label @ipsum %&#125; &#123;% label primary @primary %&#125; &#123;% label <span class="keyword">default</span> @default %&#125; &#123;% label info @info %&#125; &#123;% label success @success %&#125; &#123;% label <span class="keyword">warning</span> @warning %&#125; &#123;% label danger @danger %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果：-1"><a href="#效果：-1" class="headerlink" title="效果："></a>效果：</h2><mark class="label ">ipsum</mark> <mark class="label primary">primary</mark> <mark class="label default">default</mark> <mark class="label info">info</mark> <mark class="label success">success</mark> <mark class="label warning">warning</mark> <mark class="label danger">danger</mark>
<hr>
<h1 id="居中引用"><a href="#居中引用" class="headerlink" title="居中引用"></a>居中引用</h1><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">centerquote</span> %&#125;</span><span class="language-xml">Something</span><span class="template-tag">&#123;% <span class="name">endcenterquote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">cq</span> %&#125;</span><span class="language-xml">Something</span><span class="template-tag">&#123;% <span class="name">endcq</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="效果：-2"><a href="#效果：-2" class="headerlink" title="效果："></a>效果：</h2><blockquote class="blockquote-center">
<p>Something</p>

</blockquote>
<blockquote class="blockquote-center">
<p>Something</p>

</blockquote>

<hr>
<h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><p>见: <a href="https://theme-next.js.org/docs/tag-plugins/mermaid">https://theme-next.js.org/docs/tag-plugins/mermaid</a></p>
<h2 id="效果-13"><a href="#效果-13" class="headerlink" title="效果"></a>效果</h2><pre class="mermaid">
graph TD
A[Hard] --&gt;|Text| B(Round)
B --&gt; C{Decision}
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]
</pre>
<hr>
<pre class="mermaid">
sequenceDiagram
Alice-&gt;&gt;John: Hello John, how are you?
loop Healthcheck
    John-&gt;&gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&gt;&gt;Alice: Great!
John-&gt;&gt;Bob: How about you?
Bob--&gt;&gt;John: Jolly good!
</pre>
<hr>
<pre><code class="highlight mermaid">classDiagram
Class01 &lt;|-- AveryLongClass : Cool
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 --&gt; C2 : Where am i?
Class09 --* C3
Class09 --|&gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
Class08 &lt;--&gt; C2: Cool label</code></pre>
<hr>
<pre class="mermaid">
gantt
dateFormat  YYYY-MM-DD
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
</pre>
<hr>
<pre class="mermaid">
pie
&quot;Dogs&quot; : 386
&quot;Cats&quot; : 85
&quot;Rats&quot; : 15
</pre>
<hr>
<pre class="mermaid">
journey
title My working day
section Go to work
  Make tea: 5: Me
  Go upstairs: 3: Me
  Do work: 1: Me, Cat
section Go home
  Go downstairs: 5: Me
  Sit down: 3: Me
</pre>
<hr>
<h1 id="图片组"><a href="#图片组" class="headerlink" title="图片组"></a>图片组</h1><h2 id="见：https-theme-next-js-org-docs-tag-plugins-group-pictures-html"><a href="#见：https-theme-next-js-org-docs-tag-plugins-group-pictures-html" class="headerlink" title="见：https://theme-next.js.org/docs/tag-plugins/group-pictures.html"></a>见：<a href="https://theme-next.js.org/docs/tag-plugins/group-pictures.html">https://theme-next.js.org/docs/tag-plugins/group-pictures.html</a></h2><h1 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h1><p>见：<a href="https://theme-next.js.org/docs/tag-plugins/tabs.html">https://theme-next.js.org/docs/tag-plugins/tabs.html</a></p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>自由空间电磁波传输损耗经验公式</title>
    <url>/blog/2022/08/18/%E8%87%AA%E7%94%B1%E7%A9%BA%E9%97%B4%E7%94%B5%E7%A3%81%E6%B3%A2%E4%BC%A0%E8%BE%93%E6%8D%9F%E8%80%97%E7%BB%8F%E9%AA%8C%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<p>$$<br>Loss &#x3D; 32.44+20\lg D+20\lg F<br>$$</p>
<span id="more"></span>
<ul>
<li>Loss 指传输损耗，单位为dB</li>
<li>D 指传输距离，单位为 Km</li>
<li>F 指载波频率，单位为 MHz</li>
<li>自由空间指天线周围为无限大真空，不会被反射、散射和吸收</li>
</ul>
]]></content>
      <categories>
        <category>物理学</category>
        <category>电动力学</category>
      </categories>
      <tags>
        <tag>电动力学</tag>
        <tag>通信工程</tag>
      </tags>
  </entry>
  <entry>
    <title>群的基本概念(2)</title>
    <url>/blog/2022/08/20/%E7%BE%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5(2)/</url>
    <content><![CDATA[<p>这一节主要给出 变换群、置换群、循环群 的相关基本概念，便于查阅。</p>
<span id="more"></span>
<h1 id="变换群和置换群"><a href="#变换群和置换群" class="headerlink" title="变换群和置换群"></a>变换群和置换群</h1><h2 id="变换和置换"><a href="#变换和置换" class="headerlink" title="变换和置换"></a>变换和置换</h2><p>设$X$为一个非空集合，从$X$到$X$的双射叫做$X$上的变换；当$X$为有限集合时，则称为置换.</p>
<h2 id="变换群和置换群-1"><a href="#变换群和置换群-1" class="headerlink" title="变换群和置换群"></a>变换群和置换群</h2><p>定义$X$上的两个变换（或置换）$f,g$的乘积$fg$为先对$X$进行置换$g$，再对$X$进行置换$f$，在此乘法意义下，全体$X$上的变换构成一个群，叫$X$上的完全对称群，记作$S_X$；对于$S_X$的子群，我们称为$X$的一个变换群；若$X$为$n$个元素的集合，则称为$n$阶置换群，记作$S_n$.</p>
<h2 id="Cayley（凯莱）定理"><a href="#Cayley（凯莱）定理" class="headerlink" title="Cayley（凯莱）定理"></a>Cayley（凯莱）定理</h2><p>群$G$同构于$S_G$的一个子群.</p>
<ul>
<li>可以证明，每一个有限群都与一个置换群同构.；</li>
</ul>
<h2 id="等价性"><a href="#等价性" class="headerlink" title="等价性"></a>等价性</h2><p>设$G$为$X$上的变换群，若对$x,y\in X$，$\exists g\in G$，使得$g(x)\in y$，则称$x$与$y$等价，记作$x\sim y$.</p>
<h2 id="轨道"><a href="#轨道" class="headerlink" title="轨道"></a>轨道</h2><p>设$G$为$X$上的变换群，$x$为$X$中元素，由$X$中所有与$x$等价的元素的集合，称为$x$的$G$轨道.</p>
<h2 id="不变子集"><a href="#不变子集" class="headerlink" title="不变子集"></a>不变子集</h2><p>设$G$为$X$上的变换群，若有$X$上的子集$Y$，对应$G$中任意元素$g$，它得到的结果还属于$Y$，则称$Y$为群$G$在$X$上的不变子集.</p>
<h2 id="迷向子群"><a href="#迷向子群" class="headerlink" title="迷向子群"></a>迷向子群</h2><p>设$G$是$X$上的变换群，$x$是$X$中一点，$G$的子群$G^x$保持$x$不变，也就是$G^x&#x3D;\{h|h\in G且hx&#x3D;x\}$，则称$G^x$是$G$对$x$的迷向子群.</p>
<h1 id="循环群"><a href="#循环群" class="headerlink" title="循环群"></a>循环群</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>若一个群$G$的每一个元都是$G$的某一个固定元$a$的乘方，我们就把$G$叫做循环群.</p>
<p>也可以说$G$是由$a$生成，并用符号<br>$$<br>G&#x3D;(a)<br>$$<br>表示.$a$叫做$G$的一个生成元.</p>
<h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><p>假设$G&#x3D;(a)$，$G$的构造完全由$a$的阶数决定：<br>若$a$为无限阶，$G$与整数加群同构；<br>若$a$的阶为有限整数$n$，$G$与模$n$剩余类加群同构.</p>
]]></content>
      <categories>
        <category>数学</category>
        <category>群论</category>
      </categories>
      <tags>
        <tag>群论</tag>
        <tag>抽象代数</tag>
      </tags>
  </entry>
  <entry>
    <title>在 LUKS 设备上执行 TRIM</title>
    <url>/blog/2022/08/21/%E5%9C%A8-LUKS-%E8%AE%BE%E5%A4%87%E4%B8%8A%E6%89%A7%E8%A1%8C-TRIM/</url>
    <content><![CDATA[<p>执行此操作，至少需要 cryptsetup 1.4 和 kernel 3.1 ，或更新版本。</p>
<div class="note danger"><p>在加密分区上执行<code>TRIM</code>可能会削弱安全性</p>
</div>
<span id="more"></span>

<div class="note info"><p>在本例中，被加密的分区为<code>/dev/sda1</code></p>
</div>

<h1 id="解密分区"><a href="#解密分区" class="headerlink" title="解密分区"></a>解密分区</h1><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo cryptsetup open --allow-discards <span class="regexp">/dev/</span>sda1 data</span><br></pre></td></tr></table></figure>

<h1 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h1><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo mount <span class="regexp">/dev/m</span>apper<span class="regexp">/data /m</span>nt</span><br></pre></td></tr></table></figure>

<h1 id="执行TRIM"><a href="#执行TRIM" class="headerlink" title="执行TRIM"></a>执行<code>TRIM</code></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo fstrim -v /mnt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 虚拟环境</title>
    <url>/blog/2022/08/30/Python3-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>主要介绍<code>virtualenv</code>这一个创建<code>Python</code>虚拟环境的工具。</p>
<span id="more"></span>

<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> virtualenv</span><br></pre></td></tr></table></figure>
<p>或者可以使用<code>apt</code>：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> python3-virtualenv</span><br></pre></td></tr></table></figure>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><h2 id="创建一个虚拟环境"><a href="#创建一个虚拟环境" class="headerlink" title="创建一个虚拟环境:"></a>创建一个虚拟环境:</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">virtualenv</span> 环境保存路径名</span><br></pre></td></tr></table></figure>
<h2 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h2><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">source</span> 环境保存路径名<span class="regexp">/bin/</span>activate</span><br></pre></td></tr></table></figure>

<p>现在就可以在这个虚拟环境中直接使用<code>pip</code>等安装<code>Python</code>包，当前虚拟环境名也会显示在命令行前。</p>
<h2 id="停用虚拟环境"><a href="#停用虚拟环境" class="headerlink" title="停用虚拟环境"></a>停用虚拟环境</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">deactivate</span></span><br></pre></td></tr></table></figure>

<h2 id="移动环境"><a href="#移动环境" class="headerlink" title="移动环境"></a>移动环境</h2><p>假设我的环境原来保存在<code>/tmp/env</code>目录，但现在我想将其移动到<code>/home/clh/code/env</code>目录。</p>
<p>我们则需要修改<code>bin/</code>下的文件，对文件中的目录进行替换，这一步可以通过如下Shell脚本实现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">dest_path=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$dest_path</span></span><br><span class="line">source_path=$(<span class="built_in">cat</span> bin/activate | grep VIRTUAL_ENV=\<span class="string">&#x27; | awk -F \&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">dest_path=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;From <span class="variable">$source_path</span> to <span class="variable">$dest_path</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对 / 转义</span></span><br><span class="line">source_path=<span class="variable">$&#123;source_path//\//\\\/&#125;</span></span><br><span class="line">dest_path=<span class="variable">$&#123;dest_path//\//\\\/&#125;</span></span><br><span class="line"></span><br><span class="line">grep -sr <span class="string">&quot;<span class="variable">$source_path</span>&quot;</span> | awk -F : <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -I &#123;&#125; sed -i <span class="string">&quot;s/<span class="variable">$source_path</span>/<span class="variable">$dest_path</span>/g&quot;</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>使用方法：<br>先将<code>/tmp/env</code>移动到<code>/home/clh/code/env</code>，再运行：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">.<span class="regexp">/脚本名 /</span>home<span class="regexp">/clh/</span>code/env</span><br></pre></td></tr></table></figure>

<h1 id="更多用法参考"><a href="#更多用法参考" class="headerlink" title="更多用法参考"></a>更多用法参考</h1><blockquote>
<p><a href="https://pythonguidecn.readthedocs.io/zh/latest/dev/virtualenvs.html">https://pythonguidecn.readthedocs.io/zh/latest/dev/virtualenvs.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>虚拟环境</tag>
      </tags>
  </entry>
  <entry>
    <title>瓦片坐标与经维度换算</title>
    <url>/blog/2022/09/04/%E7%93%A6%E7%89%87%E5%9D%90%E6%A0%87%E4%B8%8E%E7%BB%8F%E7%BB%B4%E5%BA%A6%E6%8D%A2%E7%AE%97/</url>
    <content><![CDATA[<p>公式及实现见：<br><a href="https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames">https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames</a></p>
<span id="more"></span>

<p>更多参考：</p>
<blockquote>
<p><a href="https://www.biaodianfu.com/coordinates-tile.html">https://www.biaodianfu.com/coordinates-tile.html</a><br><a href="https://blog.csdn.net/antony1776/article/details/106077244">https://blog.csdn.net/antony1776/article/details/106077244</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>地图</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 智能指针</title>
    <url>/blog/2022/09/05/C-%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<p>本文主要介绍 C++11 引入的三个智能指针： <code>std::unique_ptr&lt;T&gt;</code>、<code>std::shared_ptr&lt;T&gt;</code> 和 <code>std::weak_ptr&lt;T&gt;</code></p>
<span id="more"></span>
<div class="note "><p>不要忘记添加头文件 <code>memory</code></p>
</div>
<h1 id="std-unique-ptr-lt-T-gt"><a href="#std-unique-ptr-lt-T-gt" class="headerlink" title="std::unique_ptr&lt;T&gt;"></a><code>std::unique_ptr&lt;T&gt;</code></h1><p>这个指针会在离开指针作用域时自动释放资源。</p>
<p>例子：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    std::unique_ptr&lt;<span class="type">int</span>&gt; p = std::<span class="built_in">make_unique</span>&lt;<span class="type">int</span>&gt;(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//也可以写成</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">std::unique_ptr&lt;<span class="type">int</span>&gt; <span class="title">p</span><span class="params">(<span class="keyword">new</span> <span class="type">int</span>(<span class="number">10</span>))</span></span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>等价于</p>
<figure class="highlight d"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> *p = <span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：同一时刻只能有一个<code>unique_ptr</code>指针指向给定资源，即这个指针是<code>move-only</code>的，这主要是为了防止一个资源被释放后，再通过另外一个指针访问。<br>例如：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    std::unique_ptr&lt;<span class="type">int</span>&gt; p = std::<span class="built_in">make_unique</span>&lt;<span class="type">int</span>&gt;(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这样是不被允许的</span></span><br><span class="line">    std::unique_ptr&lt;<span class="type">int</span>&gt; p1 = p2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//但这样是可以的，而且经过这一步操作后，p就成了空指针</span></span><br><span class="line">    std::unique_ptr&lt;<span class="type">int</span>&gt; p = std::<span class="built_in">move</span>(p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="std-shared-ptr-lt-T-gt"><a href="#std-shared-ptr-lt-T-gt" class="headerlink" title="std::shared_ptr&lt;T&gt;"></a><code>std::shared_ptr&lt;T&gt;</code></h1><p>这个指针是对指向的资源引用进行计数，当引用计数为0时，则释放资源。正因如此，这个指针的性能开销要略大于 裸指针 和 <code>unique_ptr</code>。<br>例子：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    std::shared_ptr&lt;<span class="type">int</span>&gt; p = std::<span class="built_in">make_shared</span>&lt;<span class="type">int</span>&gt;(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//也可以写成</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">std::shared_ptr&lt;<span class="type">int</span>&gt; <span class="title">p</span><span class="params">(<span class="keyword">new</span> <span class="type">int</span>(<span class="number">10</span>))</span></span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们可以通过方法<code>use_count()</code>查看引用计数：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    std::shared_ptr&lt;<span class="type">int</span>&gt; p = std::<span class="built_in">make_shared</span>&lt;<span class="type">int</span>&gt;(<span class="number">10</span>);</span><br><span class="line">    std::cout &lt;&lt; p.<span class="built_in">use_count</span>(); <span class="comment">//输出1</span></span><br><span class="line">    &#123;</span><br><span class="line">        std::shared_ptr&lt;<span class="type">int</span>&gt; p1 = p;</span><br><span class="line">        std::cout &lt;&lt; p.<span class="built_in">use_count</span>(); <span class="comment">//输出2</span></span><br><span class="line">    &#125;</span><br><span class="line">    std::cout &lt;&lt; p.<span class="built_in">use_count</span>(); <span class="comment">//输出1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//此时引用计数为0,资源被释放</span></span><br></pre></td></tr></table></figure>

<h1 id="std-weak-ptr-lt-T-gt"><a href="#std-weak-ptr-lt-T-gt" class="headerlink" title="std::weak_ptr&lt;T&gt;"></a><code>std::weak_ptr&lt;T&gt;</code></h1><p>这个指针是为了配合<code>std::shared_ptr</code>而引入的一种智能指针，不具有普通指针的行为。<code>std::weak_ptr</code>可以指向<code>std::shared_ptr</code>指向的资源而不改变引用计数。当指向的<code>std::shared_ptr</code>所指向的资源被释放时，<code>std:::weak_ptr</code>指针会自动变成空指针。<br>当要使用<code>std::weak_ptr</code>指针时，则需要将其提升为<code>std::shared_ptr</code>指针。</p>
<p>例子：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="function">std::shared_ptr&lt;<span class="type">int</span>&gt; <span class="title">p</span><span class="params">(<span class="keyword">new</span> <span class="type">int</span>(<span class="number">10</span>))</span></span>;</span><br><span class="line">    std::weak_ptr&lt;<span class="type">int</span>&gt; p1 = p;</span><br><span class="line">    std::cout &lt;&lt; p.<span class="built_in">use_count</span>(); <span class="comment">//输出1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断p1指向的p是否释放，如果释放 p1.lock() 会返回空指针</span></span><br><span class="line">    <span class="keyword">if</span>(p1.<span class="built_in">expired</span>())&#123;</span><br><span class="line">        std::shared_ptr&lt;<span class="type">int</span>&gt; p2 = p1.<span class="built_in">lock</span>();</span><br><span class="line">        std::cout &lt;&lt; p.<span class="built_in">use_count</span>(); <span class="comment">//输出2</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><ul>
<li><code>std::unique_ptr&lt;T&gt;</code>：用于资源被独占的情况下</li>
<li><code>std::shared_ptr&lt;T&gt;</code>：用于资源被共享的情况下</li>
<li><code>std::weak_ptr&lt;T&gt;</code>：解决循环引用等问题</li>
</ul>
<hr>
<p>参考资料：</p>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/150555165">https://zhuanlan.zhihu.com/p/150555165</a><br><a href="https://www.cnblogs.com/wxquare/p/4759020.html">https://www.cnblogs.com/wxquare/p/4759020.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++标准库 iomanip 介绍</title>
    <url>/blog/2022/09/06/C-%E6%A0%87%E5%87%86%E5%BA%93-iomanip-%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<p><code>iomanip</code>是<code>C++</code>下控制<code>I/O</code>流的一个标准库，利用它，可以实现格式化输出。</p>
<span id="more"></span>
<div class="note "><p>不要忘记添加头文件 <code>iomanip</code></p>
</div>

<h1 id="不同进制输出"><a href="#不同进制输出" class="headerlink" title="不同进制输出"></a>不同进制输出</h1><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    int a = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 八进制输出</span></span><br><span class="line">    cout &lt;&lt; showbase &lt;&lt; setbase(<span class="number">8</span>) &lt;&lt; a &lt;&lt; <span class="literal">endl</span>;</span><br><span class="line">    cout &lt;&lt; oct &lt;&lt; a &lt;&lt; <span class="literal">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 十进制输出</span></span><br><span class="line">    cout &lt;&lt; showbase &lt;&lt; setbase(<span class="number">10</span>) &lt;&lt; a &lt;&lt; <span class="literal">endl</span>;</span><br><span class="line">    cout &lt;&lt; dec &lt;&lt; a &lt;&lt; <span class="literal">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 十六进制输出</span></span><br><span class="line">    cout &lt;&lt; showbase &lt;&lt; setbase(<span class="number">16</span>) &lt;&lt; a &lt;&lt; <span class="literal">endl</span>;</span><br><span class="line">    cout &lt;&lt; hex &lt;&lt; a &lt;&lt; <span class="literal">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="保留有效数字"><a href="#保留有效数字" class="headerlink" title="保留有效数字"></a>保留有效数字</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> a = <span class="number">1.2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保留 3 位有效数字，小数不足补0</span></span><br><span class="line">    cout &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">3</span>) &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="保留小数"><a href="#保留小数" class="headerlink" title="保留小数"></a>保留小数</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> a = <span class="number">1.2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保留 3 位小数字，小数不足补0</span></span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">3</span>) &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="输出前导0"><a href="#输出前导0" class="headerlink" title="输出前导0"></a>输出前导0</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出 0123</span></span><br><span class="line">    cout &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; <span class="built_in">setw</span>(<span class="number">4</span>) &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note "><p>如果不加<code>setfill</code>，默认使用空格补位。</p>
</div>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 模板限制数据类型</title>
    <url>/blog/2022/09/15/C-%E6%A8%A1%E6%9D%BF%E9%99%90%E5%88%B6%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<div class="note "><p>此方法需要编译器支持<code>c++20</code></p>
</div>
<span id="more"></span>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>在下面的例子中，函数<code>foo</code>只能接受<code>int</code>和<code>double</code>类型的参数。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;type_traits&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">concept</span> VALID = (std::is_same_v&lt;T, <span class="type">int</span>&gt; ||</span><br><span class="line">                 std::is_same_v&lt;T, <span class="type">double</span>&gt;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;VALID T&gt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">foo</span><span class="params">(T a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例子中的<code>int</code>、<code>double</code>也可以换成自定义类型。</p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>减少 Firefox 对磁盘的写入</title>
    <url>/blog/2022/09/16/%E5%87%8F%E5%B0%91-Firefox-%E5%AF%B9%E7%A3%81%E7%9B%98%E7%9A%84%E5%86%99%E5%85%A5/</url>
    <content><![CDATA[<p>根据统计，<code>Firefox</code>每天可能会产生数GiB的磁盘写入，在这些写入中，很大一部分都是可以避免的。通过调整一些配置，我们便可以避免一些写入。</p>
<span id="more"></span>
<h1 id="调整会话存储时间"><a href="#调整会话存储时间" class="headerlink" title="调整会话存储时间"></a>调整会话存储时间</h1><p>打开<code>about:config</code>，搜索<code>browser.sessionstore.interval</code>，将默认值调大（单位为ms），我的建议是改为20分钟（也就是<code>1200000</code>）。</p>
<h1 id="减少磁盘缓存写入"><a href="#减少磁盘缓存写入" class="headerlink" title="减少磁盘缓存写入"></a>减少磁盘缓存写入</h1><p>这一步有两种方法可以实现：</p>
<ol>
<li>禁用磁盘缓存</li>
<li>将磁盘缓存移动到<code>tmpfs</code>中</li>
</ol>
<p>这两种方法各有利弊，需要自己权衡决定。目前，我使用的方法是将所以的磁盘缓存都保存到<code>tmpfs</code>中。</p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>Firefox</tag>
      </tags>
  </entry>
  <entry>
    <title>Julia 虚拟环境</title>
    <url>/blog/2022/09/20/Julia-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>前段时间，我介绍了<code>Python</code>中创建虚拟环境的<code>virtualenv</code>，近日我发现在<code>Julia</code>中也有类似的软件包<code>VirtualEnv.jl</code></p>
<span id="more"></span>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在命令行执行：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">julia -e <span class="symbol">&#x27;using</span> Pkg; Pkg.add(<span class="string">&quot;VirtualEnv&quot;</span>)&#x27;</span><br></pre></td></tr></table></figure>
<p>然后添加<code>~/.julia/bin</code>到<code>PATH</code>路径</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>见帮助：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">  venv</span><br><span class="line"></span><br><span class="line">Creates virtual Julia environments <span class="keyword">in</span> one <span class="keyword">or</span> more target directories.</span><br><span class="line"></span><br><span class="line"><span class="keyword">Usage</span></span><br><span class="line"></span><br><span class="line">  venv [<span class="keyword">options</span>] [flags] &lt;env_dirs&gt;</span><br><span class="line"></span><br><span class="line">Args</span><br><span class="line"></span><br><span class="line">  &lt;env_dirs&gt;               One <span class="keyword">or</span> more directories <span class="keyword">to</span> <span class="keyword">create</span> environments <span class="keyword">in</span>.</span><br><span class="line"></span><br><span class="line"><span class="keyword">Options</span></span><br><span class="line"></span><br><span class="line">  -p, <span class="comment">--prompt &lt;prompt&gt;    Provides an alternative prompt prefix for this</span></span><br><span class="line">                           environment.(<span class="keyword">Default</span>: ENV_DIR)</span><br><span class="line"></span><br><span class="line">Flags</span><br><span class="line"></span><br><span class="line">  -c, <span class="comment">--clear              Delete the contents of the environment directory if it</span></span><br><span class="line">                           alreadyexists. (<span class="keyword">Default</span>: <span class="keyword">false</span>)</span><br><span class="line"></span><br><span class="line">  -u, <span class="comment">--upgrade            Upgrade the environment directory to use this version</span></span><br><span class="line">                           ofJulia. (<span class="keyword">Default</span>: <span class="keyword">false</span>)</span><br><span class="line"></span><br><span class="line">  -h, <span class="comment">--help               print this help message</span></span><br><span class="line"></span><br><span class="line">  -V, <span class="comment">--version            print version information</span></span><br></pre></td></tr></table></figure>

<h1 id="移动环境"><a href="#移动环境" class="headerlink" title="移动环境"></a>移动环境</h1><p>假设我的环境原来保存在<code>/tmp/env</code>目录，但现在我想将其移动到<code>/home/clh/code/env</code>目录。</p>
<p>我们则需要修改<code>bin/</code>下的文件，对文件中的目录进行替换，这一步可以通过如下Shell脚本实现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">dest_path=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$dest_path</span></span><br><span class="line">source_path=$(<span class="built_in">cat</span> bin/activate | grep VIRTUAL_ENV=\<span class="string">&#x27; | awk -F \&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">dest_path=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;From <span class="variable">$source_path</span> to <span class="variable">$dest_path</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对 / 转义</span></span><br><span class="line">source_path=<span class="variable">$&#123;source_path//\//\\\/&#125;</span></span><br><span class="line">dest_path=<span class="variable">$&#123;dest_path//\//\\\/&#125;</span></span><br><span class="line"></span><br><span class="line">grep -sr <span class="string">&quot;<span class="variable">$source_path</span>&quot;</span> | awk -F : <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -I &#123;&#125; sed -i <span class="string">&quot;s/<span class="variable">$source_path</span>/<span class="variable">$dest_path</span>/g&quot;</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>使用方法：<br>先将<code>/tmp/env</code>移动到<code>/home/clh/code/env</code>，再运行：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">.<span class="regexp">/脚本名 /</span>home<span class="regexp">/clh/</span>code/env</span><br></pre></td></tr></table></figure>

<h1 id="更多信息"><a href="#更多信息" class="headerlink" title="更多信息"></a>更多信息</h1><p><a href="https://github.com/mehalter/VirtualEnv.jl">https://github.com/mehalter/VirtualEnv.jl</a></p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>虚拟环境</tag>
        <tag>Julia</tag>
      </tags>
  </entry>
  <entry>
    <title>C/C++ 打印调用栈</title>
    <url>/blog/2022/09/21/C-C-%E6%89%93%E5%8D%B0%E8%B0%83%E7%94%A8%E6%A0%88/</url>
    <content><![CDATA[<p>本文主要通过一个例子来介绍通过<code>libunwind</code>打印函数调用栈的方法。</p>
<span id="more"></span>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>来自网络</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> UNW_LOCAL_ONLY</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;libunwind.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Call this function to get a backtrace.</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtrace</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">unw_cursor_t</span> cursor;</span><br><span class="line">  <span class="type">unw_context_t</span> context;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Initialize cursor to current frame for local unwinding.</span></span><br><span class="line">  <span class="built_in">unw_getcontext</span>(&amp;context);</span><br><span class="line">  <span class="built_in">unw_init_local</span>(&amp;cursor, &amp;context);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Unwind frames one by one, going up the frame stack.</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">unw_step</span>(&amp;cursor) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="type">unw_word_t</span> offset, pc;</span><br><span class="line">    <span class="built_in">unw_get_reg</span>(&amp;cursor, UNW_REG_IP, &amp;pc);</span><br><span class="line">    <span class="keyword">if</span> (pc == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0x%lx:&quot;</span>, pc);</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> sym[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">unw_get_proc_name</span>(&amp;cursor, sym, <span class="built_in">sizeof</span>(sym), &amp;offset) == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot; (%s+0x%lx)\n&quot;</span>, sym, offset);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot; -- error: unable to obtain symbol name for this frame\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">backtrace</span>(); <span class="comment">// &lt;-------- backtrace here!</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">foo</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">bar</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="编译方法"><a href="#编译方法" class="headerlink" title="编译方法"></a>编译方法</h1><p>对于<code>gcc</code>或<code>g++</code>通常需要添加<code>-lunwind</code>参数，如果还显示链接错误，可以考虑再添加<code>-lunwind-x86_64</code>参数</p>
<h1 id="上述程序的输出"><a href="#上述程序的输出" class="headerlink" title="上述程序的输出"></a>上述程序的输出</h1><p>最前面的地址可能会不一样</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="number">0x555db4dc335e</span>: (foo+<span class="number">0x12</span>)</span><br><span class="line"><span class="number">0x555db4dc3373</span>: (bar+<span class="number">0x12</span>)</span><br><span class="line"><span class="number">0x555db4dc3393</span>: (main+<span class="number">0x1d</span>)</span><br><span class="line"><span class="number">0x7fc1c20ccd90</span>: (__libc_init_first+<span class="number">0x90</span>)</span><br><span class="line"><span class="number">0x7fc1c20cce40</span>: (__libc_start_main+<span class="number">0x80</span>)</span><br><span class="line"><span class="number">0x555db4dc3165</span>: (_start+<span class="number">0x25</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>JLink 命令行常用命令</title>
    <url>/blog/2022/09/25/JLink-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>主要介绍<code>JLinkExe</code>和<code>JLinkGDBServer</code></p>
<span id="more"></span>
<h1 id="JLinkExe"><a href="#JLinkExe" class="headerlink" title="JLinkExe"></a><code>JLinkExe</code></h1><h2 id="进入JLinkExe命令行"><a href="#进入JLinkExe命令行" class="headerlink" title="进入JLinkExe命令行"></a>进入<code>JLinkExe</code>命令行</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">JLinkExe</span></span><br></pre></td></tr></table></figure>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><table>
<thead>
<tr>
<th align="center">用途</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">连接目标板</td>
<td><code>usb</code></td>
</tr>
<tr>
<td align="center">重启目标板</td>
<td><code>r</code></td>
</tr>
<tr>
<td align="center">停止正在运行的程序</td>
<td><code>h</code></td>
</tr>
<tr>
<td align="center">开始执行程序</td>
<td><code>g</code></td>
</tr>
<tr>
<td align="center">打印寄存器</td>
<td><code>regs</code></td>
</tr>
<tr>
<td align="center">读寄存器</td>
<td><code>RReg &lt;RegName&gt;</code></td>
</tr>
<tr>
<td align="center">写寄存器</td>
<td><code>wreg &lt;RegName&gt; &lt;Value&gt;</code></td>
</tr>
<tr>
<td align="center">查看CPU停机原因</td>
<td><code>MoE</code></td>
</tr>
<tr>
<td align="center">设置PC寄存器</td>
<td><code>SetPC &lt;Addr&gt; </code></td>
</tr>
<tr>
<td align="center">烧录文件到指定地址</td>
<td><code>LoadFile &lt;FileName&gt; &lt;Addr&gt;</code></td>
</tr>
</tbody></table>
<h1 id="JLinkGDBServer"><a href="#JLinkGDBServer" class="headerlink" title="JLinkGDBServer"></a><code>JLinkGDBServer</code></h1><h2 id="启动方法"><a href="#启动方法" class="headerlink" title="启动方法"></a>启动方法</h2><p>以<code>STM32F103RC</code>为例</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">JLinkGDBServer </span>-if <span class="keyword">SWD </span>-device STM<span class="symbol">32F</span>103RC</span><br></pre></td></tr></table></figure>

<h2 id="GDB连接方法"><a href="#GDB连接方法" class="headerlink" title="GDB连接方法"></a><code>GDB</code>连接方法</h2><p>先进入<code>gdb</code>命令行</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gdb-multiarch</span></span><br></pre></td></tr></table></figure>

<p>加载<code>elf</code>文件</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">file</span> &lt;elf文件名&gt;</span><br></pre></td></tr></table></figure>

<p>连接<code>JLinkGDBServer</code></p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">target</span> remote <span class="number">127.0.0.1:2331</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>“四舍六入五取偶”规则</title>
    <url>/blog/2022/10/04/%E2%80%9C%E5%9B%9B%E8%88%8D%E5%85%AD%E5%85%A5%E4%BA%94%E5%8F%96%E5%81%B6%E2%80%9D%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<p>“四舍六入五取偶”规则是一种数字修约规则，能够避免“四舍五入”规则在对离散数据舍入过程中造成的系统误差。</p>
<span id="more"></span>
<h1 id="规则介绍"><a href="#规则介绍" class="headerlink" title="规则介绍"></a>规则介绍</h1><p>为了直观，使用流程图表示：</p>
<pre class="mermaid">
graph TD
A[要舍入的数] --&gt;B{判断被舍入位的大小}
B ---&gt;|大于5| C(向上入一位)
B ---&gt;|小于5| D(舍去)
B ---&gt;|等于5| E{被舍入位的前一位为偶数?}
E ---&gt;|是| D(舍去)
E ---&gt;|否| C(入一位)
</pre>

<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><table>
<thead>
<tr>
<th align="center">要舍入的数</th>
<th align="center">保留1位小数之后</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1.25</td>
<td align="center">1.2</td>
</tr>
<tr>
<td align="center">1.35</td>
<td align="center">1.4</td>
</tr>
<tr>
<td align="center">1.25001</td>
<td align="center">1.3</td>
</tr>
<tr>
<td align="center">1.3499</td>
<td align="center">1.3</td>
</tr>
</tbody></table>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>对于连续分布的数据，被舍入位恰好为5的概率为0,因此使用“四舍五入”规则并不会造成系统误差。</p>
<p>但对于实际的仪器测量的数据或计算机中进行计算的数据，往往都是离散的，舍入位是有巧合取得5的可能性，如果仍使用“四舍五入”规则，则会在多次舍入后造成数值整体向绝对值较大的方向移动，而使用“四舍六入五取偶”规则可以避免这种情况。</p>
]]></content>
      <categories>
        <category>计算机</category>
        <category>数值计算</category>
        <category>物理学</category>
        <category>数据处理</category>
      </categories>
      <tags>
        <tag>数值计算</tag>
      </tags>
  </entry>
  <entry>
    <title>MECHREVO WUJIE16 Pro无法休眠和无法识别HDMI口的解决方法</title>
    <url>/blog/2022/10/07/MECHREVO-WUJIE16-Pro%E6%97%A0%E6%B3%95%E4%BC%91%E7%9C%A0%E5%92%8C%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%ABHDMI%E5%8F%A3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>机械革命 无界16 Pro在 Linux 无法S3休眠和无法识别HDMI口问题的解决方法。</p>
<span id="more"></span>
<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>S3 休眠后无法唤醒：唤醒时屏幕背光亮（每隔几秒亮一次）但屏幕不亮，CPU风扇高速运行。</p>
<p>HDMI口无法识别：自带的HDMI口无输出，在<code>xrandr</code>中无法看到<code>HDMI-1</code>。</p>
<h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>因为 VBT (Video BIOS Tables) 提供了错误的信息，导致<code>i915</code>驱动程序无法正确初始化，从而导致上述问题。</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>最根本的解决方法是修复<code>VBT</code>中的错误信息，但这可能不太现实。</p>
<p>但我们可以通过修改<code>i915</code>驱动程序来解决此问题。</p>
<div class="note "><p>一下内容以<code>Linux Kernel 6.0</code>为例</p>
</div>

<ol>
<li>按照如下所示修改<a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpu/drm/i915/display/intel_bios.c?h=v6.0"><code>drivers/gpu/drm/i915/display/intel_bios.c</code></a>中的<a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpu/drm/i915/display/intel_bios.c?h=v6.0#n2656"><code>parse_ddi_port</code></a>函数：<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">--- a<span class="regexp">/drivers/g</span>pu<span class="regexp">/drm/i</span>915<span class="regexp">/display/i</span>ntel_bios.c</span><br><span class="line">+++ b<span class="regexp">/drivers/g</span>pu<span class="regexp">/drm/i</span>915<span class="regexp">/display/i</span>ntel_bios.c</span><br><span class="line">@@ -<span class="number">2671</span>,<span class="number">10</span> +<span class="number">2671</span>,<span class="number">15</span> @@ static void parse_ddi_port(struct intel_bios_encoder_data *devdata)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i915-&gt;vbt.ports[port]) &#123;</span><br><span class="line">+               <span class="regexp">//</span> drm_dbg_kms(&amp;i915-&gt;drm,</span><br><span class="line">+               <span class="regexp">//</span>          <span class="string">&quot;More than one child device for port %c in VBT, using the first.\n&quot;</span>,</span><br><span class="line">+               <span class="regexp">//</span>          port_name(port));</span><br><span class="line">+               <span class="regexp">//</span> return;</span><br><span class="line">                drm_dbg_kms(&amp;i915-&gt;drm,</span><br><span class="line">-                           <span class="string">&quot;More than one child device for port %c in VBT, using the first.\n&quot;</span>,</span><br><span class="line">-                           port_name(port));</span><br><span class="line">-               return;</span><br><span class="line">+                           <span class="string">&quot;i915 stucks with an nonexisting eDP, &quot;</span></span><br><span class="line">+                           <span class="string">&quot;thus although we have more than one child device for port %c in VBT, &quot;</span></span><br><span class="line">+                           <span class="string">&quot;using the latter one and ignore the first.\n&quot;</span>,</span><br><span class="line">+                           port_name(port));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sanitize_device_type(devdata, port);</span><br></pre></td></tr></table></figure>
其实上述修改就是去掉<a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpu/drm/i915/display/intel_bios.c?h=v6.0#n2677">这一个</a><code>return</code></li>
<li>重新编译内核并安装</li>
</ol>
<div class="note "><p><a href="https://gitlab.freedesktop.org/drm/intel/-/issues/6743">这一个</a>问题也值得注意，可以顺带一起修复。</p>
</div>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://gitlab.freedesktop.org/drm/intel/-/issues/5531">https://gitlab.freedesktop.org/drm/intel/-/issues/5531</a><br><a href="https://gitlab.freedesktop.org/drm/intel/-/issues/6743">https://gitlab.freedesktop.org/drm/intel/-/issues/6743</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title>ACPI 表的提取和更新方法</title>
    <url>/blog/2022/10/10/ACPI-%E8%A1%A8%E7%9A%84%E6%8F%90%E5%8F%96%E5%92%8C%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>主要介绍<code>DSDT</code>和<code>SSDT</code>的提取、反编译、修改、编译和更新的方法。</p>
<span id="more"></span>
<h1 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">acpidump &gt; acpidump</span><br><span class="line">acpixtract -<span class="selector-tag">a</span> acpidump</span><br></pre></td></tr></table></figure>
<p>这一步会在当前目录下生成许多<code>dat</code>文件。</p>
<h1 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h1><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">iasl</span> -d <span class="regexp">*.dat</span></span><br></pre></td></tr></table></figure>
<p>这一步会把上一步生成的<code>dat</code>文件反编译为<code>dsl</code>文件。</p>
<h1 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h1><p>现在就可以按照需求修改<code>dsl</code>文件。</p>
<p>注意：修改完后，需要增加版本号。</p>
<p>例如：<br>修改前：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">DefinitionBlock</span> (<span class="string">&quot;DSDT.aml&quot;</span>, <span class="string">&quot;DSDT&quot;</span>, <span class="number">2</span>, <span class="string">&quot;INTEL &quot;</span>, <span class="string">&quot;TEMPLATE&quot;</span>, <span class="number">0</span>x00000000)</span><br></pre></td></tr></table></figure>
<p>修改后应为：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">DefinitionBlock</span> (<span class="string">&quot;DSDT.aml&quot;</span>, <span class="string">&quot;DSDT&quot;</span>, <span class="number">2</span>, <span class="string">&quot;INTEL &quot;</span>, <span class="string">&quot;TEMPLATE&quot;</span>, <span class="number">0</span>x00000001)</span><br></pre></td></tr></table></figure>

<h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>例如我们修改了<code>dsdt.dsl</code>文件，可以这样编译：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">iasl</span> -sa dsdt.dsl</span><br></pre></td></tr></table></figure>
<p>此时应该会生成<code>dsdt.aml</code></p>
<p>如果修改过其他文件，也可以按照上述方法进行编译，生成相应的<code>aml</code>文件。</p>
<h1 id="应用修改"><a href="#应用修改" class="headerlink" title="应用修改"></a>应用修改</h1><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkdir -p kernel<span class="regexp">/firmware/</span>acpi</span><br></pre></td></tr></table></figure>
<p>然后复制相应的<code>aml</code>文件到上面新建的目录。</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find</span> kernel | cpio -H newc --create &gt; initrd</span><br><span class="line">cat <span class="regexp">/boot/i</span>nitrd &gt;&gt; initrd</span><br></pre></td></tr></table></figure>

<p>再用当前目录下生成的<code>initrd</code>替换系统原来的<code>initrd</code>，重启系统。</p>
<p>如果能在<code>demsg</code>中发现类似</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">ACPI: DSDT ACPI <span class="keyword">table</span> found <span class="comment">in initrd</span></span><br></pre></td></tr></table></figure>
<p>的信息，则说明替换成功。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://www.kernel.org/doc/html/latest/admin-guide/acpi/initrd_table_override.html">https://www.kernel.org/doc/html/latest/admin-guide/acpi/initrd_table_override.html</a><br><a href="https://wiki.archlinux.org/title/DSDT_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/DSDT_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>固件</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ACPI</tag>
        <tag>BIOS</tag>
      </tags>
  </entry>
  <entry>
    <title>使用zRAM作为Swap分区</title>
    <url>/blog/2022/10/18/%E4%BD%BF%E7%94%A8zram%E4%BD%9C%E4%B8%BAswap/</url>
    <content><![CDATA[<p><code>zRAM</code>能够将内存模拟为块设备，向其写入数据时，会将数据进行压缩并储存到<code>RAM</code>中。因为压缩和解压缩的速度通常比磁盘<code>IO</code>要好，故我们可以使用<code>zRAM</code>来替代磁盘的<code>Swap</code>分区，从而提高在内存不足时系统的性能。</p>
<span id="more"></span>
<h1 id="启用zRAM"><a href="#启用zRAM" class="headerlink" title="启用zRAM"></a>启用<code>zRAM</code></h1><p>对于<code>Debian</code>系的发行版，启用<code>zRAM</code>只需要安装<code>zram-tools</code>并启动相应服务：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> zram-tools</span><br><span class="line">sudo systemctl restart zramswap.service</span><br></pre></td></tr></table></figure>

<h1 id="配置zRAM"><a href="#配置zRAM" class="headerlink" title="配置zRAM"></a>配置<code>zRAM</code></h1><p>默认情况下，<code>zRAM</code>使用的压缩算法是<code>lz4</code>，如果想使用其他算法或修改<code>zRAM</code>的大小，我们可以修改配置文件<code>/etc/default/zramswap</code>。</p>
<p>目前，我的建议是：</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ALGO</span><span class="operator">=</span>zstd</span><br><span class="line"><span class="attribute">PERCENT</span><span class="operator">=</span><span class="number">70</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://wiki.debian.org/ZRam">https://wiki.debian.org/ZRam</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>x86汇编的编译与调试</title>
    <url>/blog/2022/10/20/x86%E6%B1%87%E7%BC%96%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<p>本文主要介绍在<code>Linux</code>环境下编译和调试汇编代码的方法。</p>
<span id="more"></span>
<h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>先来一段非常简单的汇编代码：</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">        msg: .<span class="keyword">string</span> <span class="string">&quot;Hello world&quot;</span></span><br><span class="line">        len = . - msg</span><br><span class="line">.<span class="keyword">text</span></span><br><span class="line">.<span class="keyword">global</span> _start</span><br><span class="line">_start:</span><br><span class="line">        movl $len, %edx</span><br><span class="line">        movl $msg, %ecx</span><br><span class="line">        movl $1, %ebx</span><br><span class="line">        movl $4, %eax</span><br><span class="line">        <span class="keyword">int</span> $0x80</span><br><span class="line"></span><br><span class="line">        movl $0, %ebx</span><br><span class="line">        movl $1, %eax</span><br><span class="line">        <span class="keyword">int</span> $0x80</span><br></pre></td></tr></table></figure>
<p>上述代码主要做的事情为：</p>
<ul>
<li>调用系统调用<code>write</code>，向标准输出输出字符串<code>Hello world</code></li>
<li>调用系统调用<code>exit</code>，退出码为<code>0</code></li>
</ul>
<p>我们可以使用以下命令来编译、链接和运行这一段程序（假设源代码名为<code>test.s</code>）</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">as -o <span class="keyword">test</span>.o <span class="keyword">test</span>.s <span class="comment"># 编译</span></span><br><span class="line">ld -o <span class="keyword">test</span> <span class="keyword">test</span>.o   <span class="comment"># 链接</span></span><br><span class="line">./<span class="keyword">test</span>  <span class="comment"># 运行</span></span><br><span class="line">echo $? <span class="comment"># 打印返回值</span></span><br></pre></td></tr></table></figure>

<h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><p>调试我们将使用<code>gdb</code>来进行</p>
<p>首先，我们编译时要加入调试用的符号表：</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">as</span> -<span class="keyword">g</span> -o <span class="keyword">test</span> <span class="keyword">test</span>.s</span><br><span class="line">ld -<span class="keyword">g</span> -o <span class="keyword">test</span> <span class="keyword">test</span>.o</span><br></pre></td></tr></table></figure>

<p>然后用<code>gdb</code>加载可执行文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb ./test</span><br></pre></td></tr></table></figure>

<p>现在就可以开始调试这个程序了。</p>
]]></content>
      <categories>
        <category>计算机</category>
        <category>GDB</category>
      </categories>
      <tags>
        <tag>GDB</tag>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>GDB 调试常用命令</title>
    <url>/blog/2022/10/21/GDB-%E8%B0%83%E8%AF%95%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p><code>GDB</code>是一个非常强大的调试工具。</p>
<span id="more"></span>
<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gdb</span> 可执行文件名  <span class="comment"># 直接调试</span></span><br><span class="line">gdb 可执行文件名 进程PID    <span class="comment"># 调试某个正在执行的程序</span></span><br><span class="line">gdb 可执行文件名 core <span class="comment"># 调试core</span></span><br></pre></td></tr></table></figure>
<p>当然，也可以先启动<code>gdb</code>，再使用<code>file</code>命令来加载可执行文件。</p>
<h1 id="指定程序运行时的命令行参数"><a href="#指定程序运行时的命令行参数" class="headerlink" title="指定程序运行时的命令行参数"></a>指定程序运行时的命令行参数</h1><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> args 命令行参数</span><br></pre></td></tr></table></figure>

<h1 id="显示源代码"><a href="#显示源代码" class="headerlink" title="显示源代码"></a>显示源代码</h1><figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line">list   <span class="meta"># 显示当前行后面的源代码</span></span><br><span class="line">list 函数名   <span class="meta"># 显示这个函数的源代码</span></span><br><span class="line">list n,m   <span class="meta"># 显示第n行到m行的源代码</span></span><br><span class="line"><span class="keyword">layout</span> src  <span class="meta"># 分屏显示源代码</span></span><br></pre></td></tr></table></figure>
<p><code>list</code>可以缩写为<code>l</code></p>
<h1 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">i line  <span class="comment"># 查看当前行在内存中的地址</span></span><br><span class="line">i line test.c:<span class="built_in">test</span>  <span class="comment"># test.c中的test函数在内存中的地址</span></span><br><span class="line">i line 10   <span class="comment"># 第10行在内存中的地址</span></span><br><span class="line">i b <span class="comment"># 显示当前所有的断点信息</span></span><br><span class="line">i b 1   <span class="comment"># 显示第一个断点的信息</span></span><br><span class="line"></span><br><span class="line">p 变量    <span class="comment"># 查看某个变量的值</span></span><br><span class="line">p /x(duotacf) 变量   <span class="comment"># 按16（10、16无符号整形、8、2、16、字符、浮点）显示变量</span></span><br><span class="line">p *a@10 <span class="comment"># 显示有10个元素的数组a</span></span><br><span class="line">p x=4   <span class="comment"># 修改x为4</span></span><br><span class="line">p <span class="variable">$ip</span>   <span class="comment"># 打印ip寄存器</span></span><br><span class="line"></span><br><span class="line">display 表达式 <span class="comment"># 每次程序暂停时打印表达式的值，用法与p类似</span></span><br><span class="line">i display   <span class="comment"># 查看当前的自动显示列表</span></span><br><span class="line"><span class="built_in">disable</span> display n   <span class="comment"># 禁用第n条自动显示</span></span><br><span class="line"><span class="built_in">enable</span> display n   <span class="comment"># 启用第n条自动显示</span></span><br><span class="line">undisplay n <span class="comment"># 删除第n条自动显示</span></span><br><span class="line">d display n <span class="comment"># 删除第n条自动显示</span></span><br><span class="line"></span><br><span class="line">bt  <span class="comment"># 显示堆栈信息</span></span><br><span class="line">bt +/-n <span class="comment"># 打印栈顶（底）n层的信息</span></span><br><span class="line"></span><br><span class="line">whatis 变量   <span class="comment"># 显示变量类型</span></span><br><span class="line">ptype 变量    <span class="comment"># 显示变量详细类型</span></span><br><span class="line"></span><br><span class="line">i r <span class="comment"># 打印所有寄存器的值（不包括浮点寄存器）</span></span><br><span class="line">i all-registers <span class="comment"># 打印所有寄存器的值（包括浮点寄存器）</span></span><br><span class="line">layout regs <span class="comment"># 分屏显示寄存器和源代码</span></span><br></pre></td></tr></table></figure>
<p><code>i</code>为<code>info</code>的缩写；<br><code>b</code>是<code>break</code>的缩写；<br><code>p</code>是<code>print</code>的缩写；<br><code>bt</code>为<code>backtrace</code>的缩写；</p>
<h1 id="断点"><a href="#断点" class="headerlink" title="断点"></a>断点</h1><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 普通断点</span></span><br><span class="line">b   <span class="comment"># 在下一行打断点</span></span><br><span class="line">b 函数名   <span class="comment"># 在指定函数入口打断点</span></span><br><span class="line">b <span class="number">5</span> <span class="comment"># 在第5行打断点</span></span><br><span class="line">b +/<span class="number">-5</span>    <span class="comment"># 在当前行+/-5行的地方打断点</span></span><br><span class="line">b <span class="built_in">file</span>:<span class="number">5</span> <span class="comment"># 在文件file的第5行打断点</span></span><br><span class="line">b <span class="built_in">file</span>:func <span class="comment"># 在文件file的func函数入口打断点</span></span><br><span class="line">b (上述参数) <span class="keyword">if</span> <span class="keyword">a</span>==<span class="number">100</span>  <span class="comment"># 如果a==100,就在指定地点打断点</span></span><br><span class="line">b *地址   <span class="comment"># 在内存地址处打断点</span></span><br><span class="line">tb  <span class="comment"># 设置临时断点，此断点只会作用一次，具体参数与b类似</span></span><br><span class="line">rb 正则表达式    <span class="comment"># 在指定的函数的开头打断点</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 观察断点</span></span><br><span class="line">watch 表达式   <span class="comment"># 当表达式发生变化时停止</span></span><br><span class="line">rwatch 表达式   <span class="comment"># 读取表达式时停止</span></span><br><span class="line">awatch 表达式  <span class="comment"># 读取或表达式发生变化时停止</span></span><br><span class="line">i watch <span class="comment"># 显示当前所有观察点信息</span></span><br><span class="line"></span><br><span class="line">i b <span class="comment"># 显示当前所有的断点信息</span></span><br><span class="line">i b <span class="number">1</span>   <span class="comment"># 显示第一个断点的信息</span></span><br><span class="line"></span><br><span class="line">disable <span class="number">1</span>   <span class="comment"># 禁用第1个断点</span></span><br><span class="line">enable <span class="number">1</span>    <span class="comment"># 启用第1个断点</span></span><br><span class="line">d   <span class="comment"># 删除所有断点</span></span><br><span class="line">d n <span class="comment"># 删除第n个断点</span></span><br><span class="line"><span class="built_in">clear</span> n <span class="comment"># 删除第n行上的所有断点</span></span><br></pre></td></tr></table></figure>
<p><code>b</code>是<code>break</code>的缩写；<br><code>tb</code>是<code>tbreak</code>的缩写；<br><code>rb</code>是<code>rbreak</code>的缩写；<br><code>i</code>是<code>info</code>的缩写；<br><code>d</code>是<code>delete</code>的缩写；</p>
<h1 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h1><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">start</span>   <span class="comment"># 开始执行程序，在main函数入口停止</span></span><br><span class="line"><span class="built_in">start</span> 参数    <span class="comment"># 传递命令行参数</span></span><br><span class="line"><span class="built_in">r</span>   <span class="comment"># 开始运行程序，直到第一个断点</span></span><br><span class="line"><span class="built_in">r</span> 参数    <span class="comment"># 传递命令行参数</span></span><br><span class="line"><span class="built_in">r</span> &gt; 文件  <span class="comment"># 重定向输出到文件</span></span><br><span class="line"></span><br><span class="line">c   <span class="comment"># 执行程序，直到下一个断点</span></span><br><span class="line">n   <span class="comment"># 执行一行代码，不进入函数</span></span><br><span class="line">n N <span class="comment"># 执行N行代码</span></span><br><span class="line"><span class="built_in">ni</span>  <span class="comment"># 执行一行汇编指令</span></span><br><span class="line"><span class="built_in">ni</span> N    <span class="comment"># 执行N行汇编指令</span></span><br><span class="line">s   <span class="comment"># 执行一行代码，进入函数</span></span><br><span class="line">s N <span class="comment"># 执行N行代码</span></span><br><span class="line"><span class="built_in">si</span>  <span class="comment"># 执行一行汇编指令</span></span><br><span class="line"><span class="built_in">si</span> N  <span class="comment"># 执行N行汇编指令</span></span><br><span class="line">u   <span class="comment"># 执行程序，直到退出当前循环</span></span><br><span class="line">u N <span class="comment"># 执行程序，直到第N行</span></span><br><span class="line"></span><br><span class="line">finish  <span class="comment"># 执行完当前函数，返回到调用当前函数的函数后停止</span></span><br><span class="line"><span class="keyword">return</span> 返回值  <span class="comment"># 强制返回当前函数</span></span><br><span class="line">j <span class="number">8</span> <span class="comment"># 直接跳转到第8行</span></span><br><span class="line">call 函数名    <span class="comment"># 调用某个函数</span></span><br></pre></td></tr></table></figure>
<p><code>r</code>为<code>run</code>的缩写；<br><code>c</code>为<code>continue</code>的缩写；<br><code>n</code>为<code>next</code>的缩写；<br><code>ni</code>为<code>nexti</code>的缩写；<br><code>s</code>为<code>step</code>的缩写；<br><code>u</code>为<code>until</code>的缩写；<br><code>j</code>为<code>jump</code>的缩写；</p>
<h1 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h1><figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">signal</span><span class="string"> 信号量  # 产生指定信号量的信号</span></span><br><span class="line"></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> nostop    # 当被调试的程序收到信号时，GDB不会停住程序的运行，但会打出消息告诉你收到这种信号</span></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> stop  # 当被调试的程序收到信号时，GDB会停住你的程序</span></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> print # 当被调试的程序收到信号时，GDB会显示出一条信息</span></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> noprint   # 当被调试的程序收到信号时，GDB不会告诉你收到信号的信息</span></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> pass/noignore # 当被调试的程序收到信号时，GDB不处理信号</span></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> nopass/ignore # 当被调试的程序收到信号时，GDB不会让被调试程序来处理这个信号</span></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> info signals  #  查看有哪些信号在被GDB检测中</span></span><br><span class="line">handle <span class="keyword">signal</span><span class="string"> info handle  #  查看有哪些信号在被GDB检测中</span></span><br></pre></td></tr></table></figure>

<h1 id="显示反汇编代码"><a href="#显示反汇编代码" class="headerlink" title="显示反汇编代码"></a>显示反汇编代码</h1><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">disas </span>  <span class="comment"># 打印当前执行函数的汇编代码</span></span><br><span class="line"><span class="keyword">disas </span>函数名   <span class="comment"># 查看指定函数的汇编代码</span></span><br><span class="line">layout asm  <span class="comment"># 分屏显示反汇编后的代码</span></span><br></pre></td></tr></table></figure>
<p><code>disas</code>是<code>disassemble</code>的缩写</p>
<h1 id="分屏控制"><a href="#分屏控制" class="headerlink" title="分屏控制"></a>分屏控制</h1><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">refresh <span class="comment"># 重新绘制屏幕</span></span><br><span class="line"></span><br><span class="line">layout <span class="keyword">asm</span>  <span class="comment"># 分屏显示反汇编后的代码</span></span><br><span class="line">layout regs <span class="comment"># 分屏显示寄存器和源代码</span></span><br><span class="line">layout src  <span class="comment"># 分屏显示源代码</span></span><br><span class="line"></span><br><span class="line">focus <span class="keyword">next</span>  <span class="comment"># 焦点切换到下一个屏幕</span></span><br><span class="line">focus <span class="keyword">asm</span>   <span class="comment"># 焦点切换到asm屏幕</span></span><br><span class="line">focus cmd</span><br><span class="line">focus src</span><br><span class="line"></span><br><span class="line">winheight src -<span class="number">1</span>  <span class="comment"># 源代码窗口高度减1</span></span><br></pre></td></tr></table></figure>
<h1 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h1><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">Enter</span>] <span class="meta"># 执行上一次运行的命令</span></span><br><span class="line">[<span class="meta">Ctrl + P</span>]  <span class="meta"># 上一条命令</span></span><br><span class="line">[<span class="meta">Ctrl + N</span>]  <span class="meta"># 下一条命令</span></span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://www.cnblogs.com/lvdongjie/p/8994092.html">https://www.cnblogs.com/lvdongjie/p/8994092.html</a><br><a href="http://c.biancheng.net/gdb/">http://c.biancheng.net/gdb/</a><br><a href="https://zhuanlan.zhihu.com/p/429118840">https://zhuanlan.zhihu.com/p/429118840</a><br><a href="https://zhuanlan.zhihu.com/p/74897601">https://zhuanlan.zhihu.com/p/74897601</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>GDB</category>
      </categories>
      <tags>
        <tag>Bug</tag>
        <tag>GDB</tag>
      </tags>
  </entry>
  <entry>
    <title>FFmpeg使用GPU编解码</title>
    <url>/blog/2022/10/21/FFmpeg%E4%BD%BF%E7%94%A8GPU%E7%BC%96%E8%A7%A3%E7%A0%81/</url>
    <content><![CDATA[<ul>
<li>本文内容只针对<code>NVIDIA</code>的<code>GPU</code><span id="more"></span></li>
</ul>
<div class="note "><p>网络上面有一些教程需要重新编译<code>FFmpeg</code>，经过我的实验，直接使用软件包管理器安装的<code>FFmpeg</code>也可以直接使用<code>GPU</code>加速。</p>
</div>
<div class="note "><p>请提前安装<code>CUDA</code></p>
</div>

<p>查看支持的编解码器：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">ffmpeg -codecs <span class="string">| grep cuvid</span></span><br></pre></td></tr></table></figure>

<p>转码命令：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">ffmpeg -hwaccel cuvid -<span class="keyword">c</span>:v 解码器 -i <span class="string">&quot;input.mkv&quot;</span> -<span class="keyword">c</span>:v 编码器 <span class="string">&quot;output.mkv&quot;</span></span><br></pre></td></tr></table></figure>

<div class="note "><p>如果编解码器都在<code>GPU</code>上，则添加<code>-hwaccel cuvid</code>可以防止解码后的数据在主机和设备之间移动，如果使用<code>GPU</code>解码、使用<code>CPU</code>编码，则不需要添加这一个参数。</p>
</div>

<p>例如使用<code>h264_cuvid</code>解码再用<code>h264_nvenc</code>编码：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">ffmpeg -hwaccel cuvid -<span class="keyword">c</span>:v h<span class="number">264</span>_cuvid -i <span class="string">&quot;input.mkv&quot;</span> -<span class="keyword">c</span>:v h<span class="number">264</span>_nvenc <span class="string">&quot;output.mkv&quot;</span></span><br></pre></td></tr></table></figure>

<p>例如使用<code>hevc_cuvid</code>解码再用<code>hevc</code>（在<code>CPU</code>上）编码：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">ffmpeg -<span class="keyword">c</span>:v hevc_cuvid -i <span class="string">&quot;input.mkv&quot;</span> -<span class="keyword">c</span>:v hevc <span class="string">&quot;output.mkv&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://yukihane.work/li-gong/ffmpeg-with-gpu">https://yukihane.work/li-gong/ffmpeg-with-gpu</a><br><a href="https://blog.csdn.net/zengraoli/article/details/119789655">https://blog.csdn.net/zengraoli/article/details/119789655</a><br><a href="https://www.jianshu.com/p/01dcd43ac4ed">https://www.jianshu.com/p/01dcd43ac4ed</a><br><a href="https://developer.nvidia.com/zh-cn/blog/nvidia-ffmpeg-transcoding-guide/">https://developer.nvidia.com/zh-cn/blog/nvidia-ffmpeg-transcoding-guide/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>CUDA</category>
      </categories>
      <tags>
        <tag>CUDA</tag>
        <tag>FFmpeg</tag>
        <tag>GPU</tag>
      </tags>
  </entry>
  <entry>
    <title>在 LUKS 设备上执行 TRIM</title>
    <url>/blog/2022/10/29/%E5%9C%A8-LUKS-%E8%AE%BE%E5%A4%87%E4%B8%8A%E6%89%A7%E8%A1%8C-TRIM/</url>
    <content><![CDATA[<p>默认情况下，<code>LUKS</code>是不会执行<code>TRIM</code>操作，但可以手动触发。</p>
<span id="more"></span>
<h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><p>运行这个脚本，就可以在指定的 <code>LUKS</code> 设备上执行<code>TRIM</code>操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">sudo cryptsetup --allow-discards --persistent open <span class="variable">$1</span> luks-trim-dev</span><br><span class="line">sudo mount /dev/mapper/luks-trim-dev /mnt</span><br><span class="line">sudo fstrim -v /mnt</span><br><span class="line">sudo umount /mnt</span><br><span class="line">sudo cryptsetup close luks-trim-dev</span><br></pre></td></tr></table></figure>

<p>用法：<br>假设脚本名为 <code>trimluks</code>，运行此脚本的命令</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">.<span class="regexp">/trimluks /</span>dev/设备名</span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://wiki.archlinux.org/title/Dm-crypt/Specialties">https://wiki.archlinux.org/title/Dm-crypt/Specialties</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>解决连接蓝牙时挂起后不经操作就立即唤醒</title>
    <url>/blog/2022/11/04/%E8%A7%A3%E5%86%B3%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99%E6%97%B6%E6%8C%82%E8%B5%B7%E5%90%8E%E4%B8%8D%E7%BB%8F%E6%93%8D%E4%BD%9C%E5%B0%B1%E7%AB%8B%E5%8D%B3%E5%94%A4%E9%86%92/</url>
    <content><![CDATA[<h1 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h1><p>当设备连接蓝牙时，如果不把蓝牙断开就执行挂起操作，在挂起后的几秒内设备会被唤醒。</p>
<span id="more"></span>
<h1 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h1><p>使用一个钩子，让蓝牙在挂起前自动禁用，唤醒时自动启用蓝牙。</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>创建脚本<code>/usr/lib/systemd/system-sleep/hci</code>，向其中写入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">  pre)</span><br><span class="line">    /usr/bin/hciconfig hci0 down</span><br><span class="line">    ;;</span><br><span class="line">  post)</span><br><span class="line">    /usr/bin/hciconfig hci0 up</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<p>然后再给上述脚本添加执行权限。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://wiki.archlinux.org/title/Power_management_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Suspend_and_hibernate_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Power_management_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Suspend_and_hibernate_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下创建空文件的几种方法</title>
    <url>/blog/2022/11/10/Linux-%E4%B8%8B%E5%88%9B%E5%BB%BA%E7%A9%BA%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>这里会介绍几种在<code>Linux</code>上创建全零文件的几种方法。</p>
<span id="more"></span>
<h1 id="普通文件"><a href="#普通文件" class="headerlink" title="普通文件"></a>普通文件</h1><p>普通文件会实际占用相应的磁盘空间</p>
<p>以创建<code>10GiB</code>的文件为例，这要求你磁盘有至少<code>10GiB</code>的空闲空间。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">dd <span class="attribute">if</span>=/dev/zero <span class="attribute">of</span>=test <span class="attribute">bs</span>=1G <span class="attribute">count</span>=10</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">fallocate</span> -l <span class="number">10</span>G test</span><br></pre></td></tr></table></figure>

<p>其中，使用<code>fallocate</code>的效率高于<code>dd</code></p>
<h1 id="空洞文件"><a href="#空洞文件" class="headerlink" title="空洞文件"></a>空洞文件</h1><p>空洞文件不会实际分配磁盘空间，只会在写入时分配，因此，我们可以创建远大于磁盘空间的文件</p>
<p>以创建<code>10TiB</code>的文件为例，这 不要求 你磁盘有<code>10TiB</code>的空闲空间。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">truncate</span> -s 10T <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>在GPU上使用MPS(Multi-Process Service)</title>
    <url>/blog/2022/11/17/%E5%9C%A8GPU%E4%B8%8A%E4%BD%BF%E7%94%A8MPS-Multi-Process-Service/</url>
    <content><![CDATA[<p><code>MPS(Multi-Process Service)</code>允许多个CPU进程共享同一<code>GPU context</code>，这样可以在很多情况下提高<code>GPU</code>利用率和占用率，从而加快计算的速度。</p>
<span id="more"></span>
<h1 id="MPS-的使用限制"><a href="#MPS-的使用限制" class="headerlink" title="MPS 的使用限制"></a>MPS 的使用限制</h1><ul>
<li>只支持<code>Linux</code></li>
<li><code>GPU</code>计算能力大于等于3.5</li>
<li><code>CUDA</code>版本大于等于5.5</li>
</ul>
<div class="note "><p>本文中，<code>CUDA</code>版本为11.7</p>
</div>

<h1 id="启用-MPS"><a href="#启用-MPS" class="headerlink" title="启用 MPS"></a>启用 MPS</h1><p>假设在<code>GPU0</code>上启用</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo nvidia-smi -i 0 -c EXCLUSIVE_PROCESS</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">CUDA_VISIBLE_DEVICES</span>=0</span><br><span class="line">nvidia-cuda-mps-control –d</span><br></pre></td></tr></table></figure>
<div class="note "><p>如果运行<code>nvidia-cuda-mps-control –d</code>时显示：<br><code>Cannot find MPS control daemon process</code><br>可以考虑先运行<code>nvidia-cuda-mps-control –f</code>，然后终止，再运行<code>nvidia-cuda-mps-control –d</code>，具体原因未知。</p>
</div>

<h1 id="查看-MPS"><a href="#查看-MPS" class="headerlink" title="查看 MPS"></a>查看 MPS</h1><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ps</span> -ef | <span class="keyword">grep</span> mps</span><br></pre></td></tr></table></figure>
<p>上述命令应该可以看到<code>nvidia-cuda-mps-control –d</code>这个进程</p>
<p>如果运行一个<code>CUDA</code>程序，使用<code>nvidia-smi</code>，应该可以看到类型一行中为<code>M+C</code></p>
<h1 id="关闭-MPS"><a href="#关闭-MPS" class="headerlink" title="关闭 MPS"></a>关闭 MPS</h1><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="keyword">quit</span> | nvidia-cuda-mps-control</span><br><span class="line">sudo nvidia-smi -i 0 -c DEFAULT</span><br></pre></td></tr></table></figure>

<h1 id="参考和更多信息"><a href="#参考和更多信息" class="headerlink" title="参考和更多信息"></a>参考和更多信息</h1><blockquote>
<p><a href="https://www.nvidia.cn/content/dam/en-zz/zh_cn/assets/webinars/31oct2019c/20191031_MPS_davidwu.pdf">https://www.nvidia.cn/content/dam/en-zz/zh_cn/assets/webinars/31oct2019c/20191031_MPS_davidwu.pdf</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>数值计算</category>
        <category>CUDA</category>
      </categories>
      <tags>
        <tag>CUDA</tag>
        <tag>异构计算</tag>
        <tag>GPU</tag>
      </tags>
  </entry>
  <entry>
    <title>CUDA 计算模式</title>
    <url>/blog/2022/11/17/CUDA-%E8%AE%A1%E7%AE%97%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<p><code>CUDA</code>有三种计算模式，分别为: <code>DEFAULT</code>、<code>EXCLUSIVE_PROCESS</code>和<code>PROHIBITED</code></p>
<span id="more"></span>
<h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><h2 id="DEFAULT"><a href="#DEFAULT" class="headerlink" title="DEFAULT"></a>DEFAULT</h2><p>默认模式：每个设备上允许有多个上下文，也就是说可以有多个主机线程使用此设备</p>
<h2 id="EXCLUSIVE-PROCESS"><a href="#EXCLUSIVE-PROCESS" class="headerlink" title="EXCLUSIVE_PROCESS"></a>EXCLUSIVE_PROCESS</h2><p>独占模式：只运行每个设备上存在一个上下文，也就是说同一时间只能有一个主机线程使用。</p>
<p>上下文可以是创建该上下文的进程中任意多个线程的当前上下文，在使用<code>MPS</code>时，通常会切换到此模式。</p>
<h2 id="PROHIBITED"><a href="#PROHIBITED" class="headerlink" title="PROHIBITED"></a>PROHIBITED</h2><p>禁止计算模式：不允许创建上下文，此时不能使用<code>CUDA</code>进行计算。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#compute-modes">https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#compute-modes</a><br>nvidia-smi的man手册</p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>数值计算</category>
        <category>CUDA</category>
      </categories>
      <tags>
        <tag>CUDA</tag>
        <tag>异构计算</tag>
        <tag>GPU</tag>
      </tags>
  </entry>
  <entry>
    <title>LTO-5 磁带机使用</title>
    <url>/blog/2022/12/22/LTO-5-%E7%A3%81%E5%B8%A6%E6%9C%BA%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p><code>LTO-5</code>之前的磁带机不支持<code>LTFS</code>，故本文内容只适用于<code>LTO-5</code>及之后的磁带机。</p>
<span id="more"></span>
<h1 id="安装-ltfs"><a href="#安装-ltfs" class="headerlink" title="安装 ltfs"></a>安装 ltfs</h1><p>见：<br><a href="https://github.com/LinearTapeFileSystem/ltfs">https://github.com/LinearTapeFileSystem/ltfs</a></p>
<h1 id="查看系统中的磁带机"><a href="#查看系统中的磁带机" class="headerlink" title="查看系统中的磁带机"></a>查看系统中的磁带机</h1><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ltfs -o device_list</span></span><br></pre></td></tr></table></figure>
<p>在我的系统中，此命令输出为：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">root</span>@CSPM-Research-Team-Internal-Server:~/data/tmp/ITDT# ltfs -o device_list</span><br><span class="line"><span class="attribute">32dd</span> LTFS14000I LTFS starting, LTFS version <span class="number">2.5.0.0</span> (Prelim), log level <span class="number">2</span>.</span><br><span class="line"><span class="attribute">32dd</span> LTFS14058I LTFS Format Specification version <span class="number">2</span>.<span class="number">4</span>.<span class="number">0</span>.</span><br><span class="line"><span class="attribute">32dd</span> LTFS14104I Launched by <span class="string">&quot;ltfs -o device_list&quot;</span>.</span><br><span class="line"><span class="attribute">32dd</span> LTFS14105I This binary is built for Linux (x86_64).</span><br><span class="line"><span class="attribute">32dd</span> LTFS14106I GCC version is <span class="number">10</span>.<span class="number">2</span>.<span class="number">1</span> <span class="number">20210110</span>.</span><br><span class="line"><span class="attribute">32dd</span> LTFS17087I Kernel version: Linux version <span class="number">5</span>.<span class="number">18</span>.<span class="number">4</span> (root@chenlh-linux-workstation) (gcc (Debian <span class="number">10</span>.<span class="number">2</span>.<span class="number">1</span>-<span class="number">6</span>) <span class="number">10</span>.<span class="number">2</span>.<span class="number">1</span> <span class="number">20210110</span>, GNU ld (GNU Binutils for Debian) <span class="number">2</span>.<span class="number">35</span>.<span class="number">2</span>) #<span class="number">1</span> SMP PREEMPT_DYNAMIC Wed Jun <span class="number">15</span> <span class="number">19</span>:<span class="number">41</span>:<span class="number">39</span> CST <span class="number">2022</span> i386.</span><br><span class="line"><span class="attribute">32dd</span> LTFS17089I Distribution: PRETTY_NAME=<span class="string">&quot;Debian GNU/Linux 11 (bullseye)&quot;</span>.</span><br><span class="line"><span class="attribute">32dd</span> LTFS17085I Plugin: Loading <span class="string">&quot;sg&quot;</span> tape backend.</span><br><span class="line"><span class="attribute">Tape</span> Device list:.</span><br><span class="line"><span class="attribute">Device</span> Name = /dev/sg4 (<span class="number">6.0.0.0</span>), Vendor ID = HP      , Product ID = Ultrium <span class="number">5</span>-SCSI  , Serial Number = HU1215N2CE, Product Name =[Ultrium <span class="number">5</span>-SCSI].</span><br></pre></td></tr></table></figure>
<h1 id="格式化磁带为LTFS格式"><a href="#格式化磁带为LTFS格式" class="headerlink" title="格式化磁带为LTFS格式"></a>格式化磁带为LTFS格式</h1><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">mkltfs -d HU<span class="number">1215</span><span class="symbol">N2</span>CE</span><br></pre></td></tr></table></figure>
<p><code>HU1215N2CE</code>即为磁带机的序列号，当然我们也可以写成：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkltfs -d <span class="regexp">/dev/</span>sg4</span><br></pre></td></tr></table></figure>

<p>对于已经有文件系统的磁带，出于安全考虑，此命令不会对磁带进行格式化，我们需要使用<code>-f</code>参数进行强制格式化</p>
<h1 id="复制大量文件"><a href="#复制大量文件" class="headerlink" title="复制大量文件"></a>复制大量文件</h1><div class="note "><p>可能需要将脚本<code>/usr/local/bin/ltfs_ordered_copy </code>第一行的<code>python</code>改为<code>python3</code>，<br>并安装<code>pyxattr</code></p>
</div>

<p>如果直接使用<code>cp</code>或<code>rsync</code>复制，可能会因为文件位置不连续导致多次倒带，<br>为了避免这种情况可以使用<code>ltfs_ordered_copy</code>来进行复制：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ltfs_ordered_copy</span> -ar 源目录 目标目录</span><br></pre></td></tr></table></figure>

<h1 id="挂载-x2F-卸载LTFS磁带"><a href="#挂载-x2F-卸载LTFS磁带" class="headerlink" title="挂载&#x2F;卸载LTFS磁带"></a>挂载&#x2F;卸载LTFS磁带</h1><p>挂载：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">ltfs -o <span class="attribute">devname</span>=HU1215N2CE 挂载点</span><br></pre></td></tr></table></figure>
<p>卸载：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">umount</span> 挂载点</span><br></pre></td></tr></table></figure>

<h1 id="弹出磁带"><a href="#弹出磁带" class="headerlink" title="弹出磁带"></a>弹出磁带</h1><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">ltfs -o <span class="attribute">devname</span>=HU1215N2CE -o release_device</span><br></pre></td></tr></table></figure>

<h1 id="查看磁带和磁带机"><a href="#查看磁带和磁带机" class="headerlink" title="查看磁带和磁带机"></a>查看磁带和磁带机</h1><p>可以通过<code>ITDT</code>来查看磁带的 使用次数、历史读取和写入错误 等，也可以对磁带机进行性能测试。</p>
<p>具体的<code>ITDT</code>的下载见：<br><a href="https://www.ibm.com/docs/en/spectrum-archive-ee/1.2.5.0?topic=tools-downloading-tape-diagnostic-tool">https://www.ibm.com/docs/en/spectrum-archive-ee/1.2.5.0?topic=tools-downloading-tape-diagnostic-tool</a></p>
<h1 id="磁带检查保存方法"><a href="#磁带检查保存方法" class="headerlink" title="磁带检查保存方法"></a>磁带检查保存方法</h1><p>见：<br><a href="https://www.dell.com/support/kbdoc/zh-cn/000122049/%e5%a6%82%e4%bd%95%e5%a4%84%e7%90%86%e5%a4%87%e4%bb%bd%e7%a3%81%e5%b8%a6">https://www.dell.com/support/kbdoc/zh-cn/000122049/%e5%a6%82%e4%bd%95%e5%a4%84%e7%90%86%e5%a4%87%e4%bb%bd%e7%a3%81%e5%b8%a6</a></p>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="mkltfs-的帮助手册"><a href="#mkltfs-的帮助手册" class="headerlink" title="mkltfs 的帮助手册"></a>mkltfs 的帮助手册</h2><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">Usage: mkltfs &lt;options&gt;</span><br><span class="line"></span><br><span class="line">Available options are:</span><br><span class="line">  -d, <span class="comment">--device=&lt;name&gt;       Tape device (required)</span></span><br><span class="line">  -f, <span class="comment">--force               Force to format medium</span></span><br><span class="line">  -s, <span class="comment">--tape-serial=&lt;id&gt;    Tape serial number (6 alphanumeric ASCII characters)</span></span><br><span class="line">  -n, <span class="comment">--volume-name=&lt;name&gt;  Tape volume name (empty by default)</span></span><br><span class="line">  -r, <span class="comment">--rules=&lt;rules&gt;       Rules for choosing files to write to the index partition.</span></span><br><span class="line">                            The syntax <span class="keyword">of</span> <span class="keyword">the</span> rule argument <span class="keyword">is</span>:</span><br><span class="line">                                size=<span class="number">1</span>M</span><br><span class="line">                                size=<span class="number">1</span>M/<span class="built_in">name</span>=pattern</span><br><span class="line">                                size=<span class="number">1</span>M/<span class="built_in">name</span>=pattern1:pattern2:pattern3</span><br><span class="line">                            A <span class="built_in">file</span> <span class="keyword">is</span> written <span class="keyword">to</span> <span class="keyword">the</span> index partition <span class="keyword">if</span> <span class="keyword">it</span> <span class="keyword">is</span> no larger</span><br><span class="line">                            than <span class="keyword">the</span> <span class="keyword">given</span> size AND matches <span class="keyword">at</span> least one <span class="keyword">of</span> <span class="keyword">the</span> <span class="built_in">name</span></span><br><span class="line">                            patterns (<span class="keyword">if</span> specified). The size argument accepts K, M, <span class="keyword">and</span> G</span><br><span class="line">                            suffixes. Name patterns might <span class="keyword">contain</span> <span class="keyword">the</span> special <span class="built_in">characters</span></span><br><span class="line">                            &#x27;?&#x27; (match any single <span class="built_in">character</span>) <span class="keyword">and</span> &#x27;*&#x27; (match zero <span class="keyword">or</span> more</span><br><span class="line">                            <span class="built_in">characters</span>)</span><br><span class="line">      <span class="comment">--no-override         Disallow mount-time data placement policy changes</span></span><br><span class="line">  -w, <span class="comment">--wipe                Restore the LTFS medium to an unpartitioned medium (format to a legacy scratch medium)</span></span><br><span class="line">  -q, <span class="comment">--quiet               Suppress progress information and general messages</span></span><br><span class="line">  -t, <span class="comment">--trace               Enable function call tracing</span></span><br><span class="line">      <span class="comment">--syslogtrace               Enable diagnostic output to stderr and syslog</span></span><br><span class="line">  -V, <span class="comment">--version             Version information</span></span><br><span class="line">  -h, <span class="comment">--help                This help</span></span><br><span class="line">  -p, <span class="comment">--advanced-help       Full help, including advanced options</span></span><br><span class="line">  -i, <span class="comment">--config=&lt;file&gt;       Use the specified configuration file (default: /usr/local/etc/ltfs.conf)</span></span><br><span class="line">  -e, <span class="comment">--backend=&lt;name&gt;      Use the specified tape device backend (default: sg)</span></span><br><span class="line">      <span class="comment">--kmi-backend=&lt;name&gt;  Use the specified key manager interface backend (default: none)</span></span><br><span class="line">  -b, <span class="comment">--blocksize=&lt;num&gt;     Set the LTFS record size (default: 524288)</span></span><br><span class="line">  -c, <span class="comment">--no-compression      Disable compression on the volume</span></span><br><span class="line">  -k, <span class="comment">--keep-capacity       Keep the tape medium&#x27;s total capacity proportion</span></span><br><span class="line">  -x, <span class="comment">--fulltrace           Enable full function call tracing (slow)</span></span><br><span class="line">      <span class="comment">--long-wipe           Unformat the medium and erase any data on the tape by overwriting special data pattern.</span></span><br><span class="line">                            This operation takes <span class="keyword">over</span> <span class="number">3</span> hours. Once you start, you cannot interrupt <span class="keyword">it</span></span><br><span class="line">      <span class="comment">--destructive         Use destructive format/unformat. This operation takes longer time</span></span><br><span class="line">                            <span class="keyword">in</span> <span class="keyword">the</span> LTO9 drive <span class="keyword">or</span> later because <span class="keyword">of</span> <span class="keyword">the</span> media optimization procedure</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LTFS17085I Plugin: Loading <span class="string">&quot;flatfile&quot;</span> kmi backend.</span><br><span class="line">Key manager interface flatfile plug-<span class="keyword">in</span> options:</span><br><span class="line">    -o kmi_dki_for_format=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier <span class="keyword">to</span> format a cartridge</span><br><span class="line">    -o kmi_dk_list=FILE</span><br><span class="line">                              Data key <span class="keyword">and</span> data key identifier pairs&#x27; <span class="built_in">list</span> <span class="built_in">file</span></span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">LTFS17085I Plugin: Loading <span class="string">&quot;simple&quot;</span> kmi backend.</span><br><span class="line">Key manager interface simple plug-<span class="keyword">in</span> options:</span><br><span class="line">    -o kmi_dk=&lt;DK&gt;</span><br><span class="line">                              Data key</span><br><span class="line">    -o kmi_dki=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier</span><br><span class="line">    -o kmi_dk_for_format=&lt;DK&gt;</span><br><span class="line">                              Data key <span class="keyword">to</span> format a cartridge</span><br><span class="line">    -o kmi_dki_for_format=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier <span class="keyword">to</span> format a cartridge</span><br><span class="line">    -o kmi_dk_list=&lt;DK&gt;:&lt;DKi&gt;/&lt;DK&gt;:&lt;DKi&gt;/.../&lt;DK&gt;:&lt;DKi&gt;</span><br><span class="line">                              Data key <span class="keyword">and</span> data key identifier pairs&#x27; <span class="built_in">list</span></span><br><span class="line"></span><br><span class="line">.</span><br><span class="line"></span><br><span class="line">Usage example:</span><br><span class="line">  mkltfs <span class="comment">--device=0 --rules=&quot;size=100K&quot;</span></span><br><span class="line">  mkltfs <span class="comment">--device=0 --rules=&quot;size=1M/name=*.jpg&quot;</span></span><br><span class="line">  mkltfs <span class="comment">--device=0 --rules=&quot;size=1M/name=*.jpg:*.png&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="ltfs-帮助手册"><a href="#ltfs-帮助手册" class="headerlink" title="ltfs 帮助手册"></a>ltfs 帮助手册</h2><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">usage: ltfs mountpoint [options]</span><br><span class="line"></span><br><span class="line">general options:</span><br><span class="line">    -o opt,[opt...]        mount options</span><br><span class="line">    -<span class="keyword">h</span>   --<span class="keyword">help</span>            <span class="keyword">print</span> <span class="keyword">help</span></span><br><span class="line">    -V   --<span class="keyword">version</span>         <span class="keyword">print</span> <span class="keyword">version</span></span><br><span class="line"></span><br><span class="line">FUSE options:</span><br><span class="line">    -<span class="keyword">d</span>   -o debug          enable debug output (implies -f)</span><br><span class="line">    -f                     foreground operation</span><br><span class="line">    -s                     disable multi-threaded operation</span><br><span class="line"></span><br><span class="line">    -o allow_other         allow access to other users</span><br><span class="line">    -o allow_root          allow access to root</span><br><span class="line">    -o auto_unmount        auto unmount <span class="keyword">on</span> process termination</span><br><span class="line">    -o nonempty            allow mounts over non-empty <span class="keyword">file</span>/<span class="keyword">dir</span></span><br><span class="line">    -o default_permissions enable permission checking <span class="keyword">by</span> kernel</span><br><span class="line">    -o fsname=NAME         <span class="keyword">set</span> filesystem name</span><br><span class="line">    -o subtype=NAME        <span class="keyword">set</span> filesystem <span class="keyword">type</span></span><br><span class="line">    -o large_read          issue large <span class="keyword">read</span> requests (2.4 only)</span><br><span class="line">    -o max_read=<span class="keyword">N</span>          <span class="keyword">set</span> maximum size of <span class="keyword">read</span> requests</span><br><span class="line"></span><br><span class="line">    -o hard_remove         immediate removal (don&#x27;t hide files)</span><br><span class="line">    -o use_ino             let filesystem <span class="keyword">set</span> inode numbers</span><br><span class="line">    -o readdir_ino         try to fill <span class="keyword">in</span> d_ino <span class="keyword">in</span> readdir</span><br><span class="line">    -o direct_io           <span class="keyword">use</span> direct I/O</span><br><span class="line">    -o kernel_cache        cache files <span class="keyword">in</span> kernel</span><br><span class="line">    -o [<span class="keyword">no</span>]auto_cache      enable caching based <span class="keyword">on</span> modification times (off)</span><br><span class="line">    -o umask=<span class="keyword">M</span>             <span class="keyword">set</span> <span class="keyword">file</span> permissions (octal)</span><br><span class="line">    -o uid=<span class="keyword">N</span>               <span class="keyword">set</span> <span class="keyword">file</span> owner</span><br><span class="line">    -o gid=<span class="keyword">N</span>               <span class="keyword">set</span> <span class="keyword">file</span> group</span><br><span class="line">    -o entry_timeout=T     cache timeout <span class="keyword">for</span> names (1.0s)</span><br><span class="line">    -o negative_timeout=T  cache timeout <span class="keyword">for</span> deleted names (0.0s)</span><br><span class="line">    -o attr_timeout=T      cache timeout <span class="keyword">for</span> attributes (1.0s)</span><br><span class="line">    -o ac_attr_timeout=T   auto cache timeout <span class="keyword">for</span> attributes (attr_timeout)</span><br><span class="line">    -o noforget            never forget cached inodes</span><br><span class="line">    -o remember=T          remember cached inodes <span class="keyword">for</span> T seconds (0s)</span><br><span class="line">    -o nopath              don&#x27;t supply path <span class="keyword">if</span> not necessary</span><br><span class="line">    -o intr                allow requests to be interrupted</span><br><span class="line">    -o intr_signal=NUM     signal to send <span class="keyword">on</span> interrupt (10)</span><br><span class="line">    -o modules=M1[:M2...]  names of modules to push onto filesystem <span class="keyword">stack</span></span><br><span class="line"></span><br><span class="line">    -o max_write=<span class="keyword">N</span>         <span class="keyword">set</span> maximum size of write requests</span><br><span class="line">    -o max_readahead=<span class="keyword">N</span>     <span class="keyword">set</span> maximum readahead</span><br><span class="line">    -o max_background=<span class="keyword">N</span>    <span class="keyword">set</span> number of maximum background requests</span><br><span class="line">    -o congestion_threshold=<span class="keyword">N</span>  <span class="keyword">set</span> kernel&#x27;s congestion threshold</span><br><span class="line">    -o async_read          perform reads asynchronously (default)</span><br><span class="line">    -o sync_read           perform reads synchronously</span><br><span class="line">    -o atomic_o_trunc      enable atomic <span class="keyword">open</span>+truncate support</span><br><span class="line">    -o big_writes          enable larger than 4kB writes</span><br><span class="line">    -o no_remote_lock      disable remote <span class="keyword">file</span> locking</span><br><span class="line">    -o no_remote_flock     disable remote <span class="keyword">file</span> locking (BSD)</span><br><span class="line">    -o no_remote_posix_lock disable remove <span class="keyword">file</span> locking (POSIX)</span><br><span class="line">    -o [no_]splice_write   <span class="keyword">use</span> splice to write to the fuse device</span><br><span class="line">    -o [no_]splice_move    <span class="keyword">move</span> data <span class="keyword">while</span> splicing to the fuse device</span><br><span class="line">    -o [no_]splice_read    <span class="keyword">use</span> splice to <span class="keyword">read</span> from the fuse device</span><br><span class="line"></span><br><span class="line">Module options:</span><br><span class="line"></span><br><span class="line">[iconv]</span><br><span class="line">    -o from_code=CHARSET   original encoding of <span class="keyword">file</span> names (default: UTF-8)</span><br><span class="line">    -o to_code=CHARSET      new encoding of the <span class="keyword">file</span> names (default: UTF-8)</span><br><span class="line"></span><br><span class="line">[subdir]</span><br><span class="line">    -o subdir=<span class="keyword">DIR</span>           prepend this directory to all paths (mandatory)</span><br><span class="line">    -o [<span class="keyword">no</span>]rellinks         transform absolute symlinks to relative</span><br><span class="line"></span><br><span class="line">LTFS options:</span><br><span class="line">    -o devname=&lt;dev&gt;          Tape device</span><br><span class="line">    -o config_file=&lt;<span class="keyword">file</span>&gt;     Configuration <span class="keyword">file</span> (default: /usr/<span class="keyword">local</span>/etc/ltfs.<span class="keyword">conf</span>)</span><br><span class="line">    -o work_directory=&lt;<span class="keyword">dir</span>&gt;   LTFS work directory (default: /tmp/ltfs)</span><br><span class="line">    -o atime                  <span class="keyword">Update</span> index <span class="keyword">if</span> only access times have changed</span><br><span class="line">    -o noatime                <span class="keyword">Do</span> not <span class="keyword">update</span> index <span class="keyword">if</span> only access times have changed (default)</span><br><span class="line">    -o tape_backend=&lt;name&gt;    tape backend to <span class="keyword">use</span> (default: sg)</span><br><span class="line">    -o iosched_backend=&lt;name&gt; I/O scheduler implementation to <span class="keyword">use</span> (default: unified, <span class="keyword">use</span> <span class="string">&quot;none&quot;</span> to disable)</span><br><span class="line">    -o kmi_backend=&lt;name&gt;     Key manager interface implementation to <span class="keyword">use</span> (default: none, <span class="keyword">use</span> <span class="string">&quot;none&quot;</span> to disable)</span><br><span class="line">    -o umask=&lt;mode&gt;           Override default permission mask (3 octal digits, default: 000)</span><br><span class="line">    -o fmask=&lt;mode&gt;           Override <span class="keyword">file</span> permission mask (3 octal digits, default: 000)</span><br><span class="line">    -o dmask=&lt;mode&gt;           Override directory permission mask (3 octal digits, default: 000)</span><br><span class="line">    -o min_pool_size=&lt;num&gt;    Minimum write cache pool size. Cache objects are 1 MB each (default: 25)</span><br><span class="line">    -o max_pool_size=&lt;num&gt;    Maximum write cache pool size. Cache objects are 1 MB each (default: 50)</span><br><span class="line">    -o rules=&lt;rules&gt;          Rules <span class="keyword">for</span> choosing files to write to the index partition.</span><br><span class="line">                              The <span class="keyword">syntax</span> of the rule argument is:</span><br><span class="line">                              size=1M</span><br><span class="line">                              size=1M/name=pattern</span><br><span class="line">                              size=1M/name=pattern1:pattern2:pattern3</span><br><span class="line">                              A <span class="keyword">file</span> is written to the index partition <span class="keyword">if</span> it is <span class="keyword">no</span> larger</span><br><span class="line">                              than the given size AND matches at least <span class="keyword">one</span> of the name</span><br><span class="line">                              patterns (<span class="keyword">if</span> specified). The size argument accepts K, <span class="keyword">M</span>, and <span class="keyword">G</span></span><br><span class="line">                              suffixes. Name patterns might contain the special characters</span><br><span class="line">                              &#x27;?&#x27; (match any single character) and &#x27;*&#x27; (match zero or <span class="keyword">more</span></span><br><span class="line">                              characters)</span><br><span class="line">    -o quiet                  Disable informational messages (same <span class="keyword">as</span> verbose=1)</span><br><span class="line">    -o trace                  Enable diagnostic output (same <span class="keyword">as</span> verbose=3)</span><br><span class="line">    -o syslogtrace            Enable diagnostic output to stderr and syslog(same <span class="keyword">as</span> verbose=303)</span><br><span class="line">    -o fulltrace              Enable full call tracing (same <span class="keyword">as</span> verbose=4)</span><br><span class="line">    -o verbose=&lt;num&gt;          Override output verbosity directly (default: 2)</span><br><span class="line">    -o eject                  Eject the cartridge after unmount</span><br><span class="line">    -o noeject                <span class="keyword">Do</span> not eject the cartridge after unmount (default)</span><br><span class="line">    -o sync_type=&lt;<span class="keyword">type</span>&gt;       Specify sync <span class="keyword">type</span> (default: time@5)</span><br><span class="line">                              &lt;<span class="keyword">type</span>&gt; should be specified <span class="keyword">as</span> follows:</span><br><span class="line">                              time@min:  LTFS attempts to write <span class="keyword">an</span> index each &#x27;min&#x27; minutes.</span><br><span class="line">                                         min should be a decimal number from 1 to 153722867280912930</span><br><span class="line">                                         It is equivalent to <span class="string">&quot;-o sync_type=unmount&quot;</span> when 0 is specified</span><br><span class="line">                                         (default: min=5)</span><br><span class="line">                              <span class="keyword">close</span>:     LTFS attempts to write <span class="keyword">an</span> index when a <span class="keyword">file</span> is closed</span><br><span class="line">                              unmount:   LTFS attempts to write <span class="keyword">an</span> index when the medium is unmounted</span><br><span class="line">    -o force_mount_no_eod     Skip EOD existence check when mounting (<span class="keyword">read</span>-only mount)</span><br><span class="line">                              Only <span class="keyword">use</span> <span class="keyword">for</span> a CM corrupted medium</span><br><span class="line">    -o device_list            Show available tape devices</span><br><span class="line">    -o rollback_mount=&lt;<span class="keyword">gen</span>|index_file&gt;  Attempt to mount <span class="keyword">on</span> previous index generation <span class="keyword">on</span> tape or specified index <span class="keyword">file</span> (<span class="keyword">read</span>-only mount)</span><br><span class="line">    -o release_device         <span class="keyword">Clear</span> device reservation (should be specified with -o devname</span><br><span class="line">    -o symlink_type=&lt;<span class="keyword">type</span>&gt;    Specify symbolic link <span class="keyword">type</span> (default: posix)</span><br><span class="line">                              &lt;<span class="keyword">type</span>&gt; should be specified with <span class="keyword">one</span> of the following values:</span><br><span class="line">                              posix:  LTFS behavior is same <span class="keyword">as</span> standard symbolic link</span><br><span class="line">                              live:   LTFS replaces mount point path <span class="keyword">by</span> current mount point</span><br><span class="line">    -o capture_index=&lt;<span class="keyword">dir</span>&gt;    <span class="keyword">Capture</span> index to the specified directory <span class="keyword">by</span> <span class="keyword">dir</span> when index is updated</span><br><span class="line">    -o scsi_append_only_mode=&lt;<span class="keyword">on</span>|off&gt;  <span class="keyword">Set</span> the tape device <span class="keyword">append</span>-only mode (default=<span class="keyword">on</span>)</span><br><span class="line">    -a                        Advanced <span class="keyword">help</span>, including standard FUSE options</span><br><span class="line">    -V, --<span class="keyword">version</span>             Output <span class="keyword">version</span> information and <span class="keyword">exit</span></span><br><span class="line">    -<span class="keyword">h</span>, --<span class="keyword">help</span>                <span class="keyword">Display</span> this <span class="keyword">help</span> and <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">33de LTFS17085I <span class="keyword">Plugin</span>: Loading <span class="string">&quot;flatfile&quot;</span> kmi backend.</span><br><span class="line">Key manager interface flatfile plug-<span class="keyword">in</span> options:</span><br><span class="line">    -o kmi_dki_for_format=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier to <span class="keyword">format</span> a cartridge</span><br><span class="line">    -o kmi_dk_list=<span class="keyword">FILE</span></span><br><span class="line">                              Data key and data key identifier pairs&#x27; <span class="keyword">list</span> <span class="keyword">file</span></span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">33de LTFS17085I <span class="keyword">Plugin</span>: Loading <span class="string">&quot;simple&quot;</span> kmi backend.</span><br><span class="line">Key manager interface simple plug-<span class="keyword">in</span> options:</span><br><span class="line">    -o kmi_dk=&lt;DK&gt;</span><br><span class="line">                              Data key</span><br><span class="line">    -o kmi_dki=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier</span><br><span class="line">    -o kmi_dk_for_format=&lt;DK&gt;</span><br><span class="line">                              Data key to <span class="keyword">format</span> a cartridge</span><br><span class="line">    -o kmi_dki_for_format=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier to <span class="keyword">format</span> a cartridge</span><br><span class="line">    -o kmi_dk_list=&lt;DK&gt;:&lt;DKi&gt;/&lt;DK&gt;:&lt;DKi&gt;/.../&lt;DK&gt;:&lt;DKi&gt;</span><br><span class="line">                              Data key and data key identifier pairs&#x27; <span class="keyword">list</span></span><br></pre></td></tr></table></figure>

<h2 id="ltfsck-帮助手册"><a href="#ltfsck-帮助手册" class="headerlink" title="ltfsck 帮助手册"></a>ltfsck 帮助手册</h2><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">Usage: ltfsck [options] filesys</span><br><span class="line"></span><br><span class="line">filesys                           Device <span class="built_in">file</span> <span class="keyword">for</span> <span class="keyword">the</span> tape drive</span><br><span class="line"></span><br><span class="line">Available options are:</span><br><span class="line">  -g, <span class="comment">--generation=&lt;generation&gt;   Specify the generation to roll back</span></span><br><span class="line">  -r, <span class="comment">--rollback                  Roll back to the point specified by -g</span></span><br><span class="line">  -n, <span class="comment">--no-rollback               Do not roll back. Verify the point specified by -g (default)</span></span><br><span class="line">  -f, <span class="comment">--full-recovery             Recover extra data blocks into directory _ltfs_lostandfound</span></span><br><span class="line">  -z, <span class="comment">--deep-recovery             Recover EOD missing cartridge.</span></span><br><span class="line">                                  Some blocks might be erased, <span class="keyword">but</span> recover <span class="keyword">to</span> final unmount point</span><br><span class="line">                                  <span class="keyword">with</span> an index <span class="built_in">version</span> <span class="keyword">of</span> <span class="keyword">at</span> least  <span class="number">2.0</span><span class="number">.0</span>  <span class="keyword">or</span> earlier.</span><br><span class="line">                                  (Must be used <span class="keyword">for</span> a cartridge <span class="keyword">that</span> cannot be recovered <span class="keyword">by</span> a normal option.)</span><br><span class="line">  -l, <span class="comment">--list-rollback-points      List rollback points</span></span><br><span class="line">  -m, <span class="comment">--full-index-info           Display full index information (Effective only for -l option)</span></span><br><span class="line">  -v, <span class="comment">--traverse=&lt;strategy&gt;       Set traverse mode for listing roll back points. Strategy should be forward or backward. (default: backward)</span></span><br><span class="line">  -j, <span class="comment">--erase-history             Erase history at rollback</span></span><br><span class="line">  -k, <span class="comment">--keep-history              Keep history at rollback (default)</span></span><br><span class="line">  -q, <span class="comment">--quiet                     Suppress informational messages</span></span><br><span class="line">  -t, <span class="comment">--trace                     Enable diagnostic output</span></span><br><span class="line">      <span class="comment">--syslogtrace               Enable diagnostic output to stderr and syslog</span></span><br><span class="line">  -V, <span class="comment">--version                   Version information</span></span><br><span class="line">  -h, <span class="comment">--help                      This help</span></span><br><span class="line">  -p, <span class="comment">--advanced-help             Full help, including advanced options</span></span><br><span class="line">  -i, <span class="comment">--config=&lt;file&gt;             Use the specified configuration file (default: /usr/local/etc/ltfs.conf)</span></span><br><span class="line">  -e, <span class="comment">--backend=&lt;name&gt;            Override the default tape device backend</span></span><br><span class="line">      <span class="comment">--kmi-backend=&lt;name&gt;        Override the default key manager interface backend</span></span><br><span class="line">  -x, <span class="comment">--fulltrace                 Enable full function call tracing (slow)</span></span><br><span class="line">      <span class="comment">--capture-index=&lt;dir&gt;       Capture indexes to the specified directory (-g is effective for this option)</span></span><br><span class="line">      <span class="comment">--salvage-rollback-points   List the rollback points of the cartridge that has no EOD</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LTFS17085I Plugin: Loading <span class="string">&quot;flatfile&quot;</span> kmi backend.</span><br><span class="line">Key manager interface flatfile plug-<span class="keyword">in</span> options:</span><br><span class="line">    -o kmi_dki_for_format=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier <span class="keyword">to</span> format a cartridge</span><br><span class="line">    -o kmi_dk_list=FILE</span><br><span class="line">                              Data key <span class="keyword">and</span> data key identifier pairs&#x27; <span class="built_in">list</span> <span class="built_in">file</span></span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">LTFS17085I Plugin: Loading <span class="string">&quot;simple&quot;</span> kmi backend.</span><br><span class="line">Key manager interface simple plug-<span class="keyword">in</span> options:</span><br><span class="line">    -o kmi_dk=&lt;DK&gt;</span><br><span class="line">                              Data key</span><br><span class="line">    -o kmi_dki=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier</span><br><span class="line">    -o kmi_dk_for_format=&lt;DK&gt;</span><br><span class="line">                              Data key <span class="keyword">to</span> format a cartridge</span><br><span class="line">    -o kmi_dki_for_format=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier <span class="keyword">to</span> format a cartridge</span><br><span class="line">    -o kmi_dk_list=&lt;DK&gt;:&lt;DKi&gt;/&lt;DK&gt;:&lt;DKi&gt;/.../&lt;DK&gt;:&lt;DKi&gt;</span><br><span class="line">                              Data key <span class="keyword">and</span> data key identifier pairs&#x27; <span class="built_in">list</span></span><br><span class="line"></span><br><span class="line">.</span><br></pre></td></tr></table></figure>

<h2 id="ltfsindextool-帮助手册"><a href="#ltfsindextool-帮助手册" class="headerlink" title="ltfsindextool 帮助手册"></a>ltfsindextool 帮助手册</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Usage: ltfsindextool [options] [filename]</span><br><span class="line"></span><br><span class="line">Available options are:</span><br><span class="line">  -d, <span class="attribute">--device</span>=&lt;name&gt;        Tape device (Capture index <span class="keyword">to</span> specified file when this option is specified. Otherwise <span class="built_in">run</span> check process with specified file)</span><br><span class="line">  -p, <span class="attribute">--partition</span>=&lt;part_num&gt; Partition number 0 <span class="keyword">or</span> 1, capture both partitions <span class="keyword">if</span> <span class="keyword">not</span> specified</span><br><span class="line">  -s, <span class="attribute">--start-pos</span>=&lt;block&gt;    Block number <span class="keyword">to</span> start capturing (default: 5)</span><br><span class="line">      <span class="attribute">--output-dir</span>=&lt;dir&gt;     Directory <span class="keyword">to</span> store captured indexes (default: <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">  -b, <span class="attribute">--blocksize</span>=&lt;num&gt;      Specify the LTFS record size (default: 524288)</span><br><span class="line">  -i, <span class="attribute">--config</span>=&lt;file&gt;        Use the specified configuration file (default: /usr/local/etc/ltfs.conf)</span><br><span class="line">  -e, <span class="attribute">--backend</span>=&lt;name&gt;       Use the specified tape device backend (default: sg)</span><br><span class="line">      <span class="attribute">--kmi-backend</span>=&lt;name&gt;   Use the specified key manager<span class="built_in"> interface </span>backend (default: none)</span><br><span class="line">  -q, --quiet                Suppress progress information <span class="keyword">and</span> general messages</span><br><span class="line">  -t, --trace                <span class="built_in">Enable</span> function call tracing</span><br><span class="line">  -V, --version             Version information</span><br><span class="line">  -h, --help                 This help</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LTFS17085I Plugin: Loading <span class="string">&quot;flatfile&quot;</span> kmi backend.</span><br><span class="line">Key manager<span class="built_in"> interface </span>flatfile plug-in options:</span><br><span class="line">    -o <span class="attribute">kmi_dki_for_format</span>=&lt;DKi&gt;</span><br><span class="line">                              Data key identifier <span class="keyword">to</span> format a cartridge</span><br><span class="line">    -o <span class="attribute">kmi_dk_list</span>=FILE</span><br><span class="line">                              Data key <span class="keyword">and</span> data key identifier pairs<span class="string">&#x27; list file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">LTFS17085I Plugin: Loading &quot;simple&quot; kmi backend.</span></span><br><span class="line"><span class="string">Key manager interface simple plug-in options:</span></span><br><span class="line"><span class="string">    -o kmi_dk=&lt;DK&gt;</span></span><br><span class="line"><span class="string">                              Data key</span></span><br><span class="line"><span class="string">    -o kmi_dki=&lt;DKi&gt;</span></span><br><span class="line"><span class="string">                              Data key identifier</span></span><br><span class="line"><span class="string">    -o kmi_dk_for_format=&lt;DK&gt;</span></span><br><span class="line"><span class="string">                              Data key to format a cartridge</span></span><br><span class="line"><span class="string">    -o kmi_dki_for_format=&lt;DKi&gt;</span></span><br><span class="line"><span class="string">                              Data key identifier to format a cartridge</span></span><br><span class="line"><span class="string">    -o kmi_dk_list=&lt;DK&gt;:&lt;DKi&gt;/&lt;DK&gt;:&lt;DKi&gt;/.../&lt;DK&gt;:&lt;DKi&gt;</span></span><br><span class="line"><span class="string">                              Data key and data key identifier pairs&#x27;</span> list</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line"></span><br><span class="line">Usage example:</span><br><span class="line">  ltfsindextool <span class="attribute">--device</span>=0 <span class="attribute">-p</span>=0</span><br></pre></td></tr></table></figure>

<h2 id="ltfs-ordered-copy-帮助手册"><a href="#ltfs-ordered-copy-帮助手册" class="headerlink" title="ltfs_ordered_copy 帮助手册"></a>ltfs_ordered_copy 帮助手册</h2><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">LTFS_ORDERED_COPY(<span class="number">1</span>)                                                                              LTFS Command Reference                                                                              LTFS_ORDERED_COPY(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       ltfs_ordered_copy - <span class="keyword">Copy</span> files <span class="keyword">from</span> <span class="keyword">source</span> to destination with LTFS order optimization</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       ltfs_ordered_copy [ -p ]  [ -r ]  [ -t TARGET_DIRECTORY ]  [ --keep-tree CUTOFF_PREFIX ]  [ -a ]  [ -v ]  [ --verbose LOG_LEVEL ]  [ -q ]  [ -h ]  [ <span class="keyword">SOURCE</span> ... ]  [ DESTINATION ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">DESCRIPTION</span></span><br><span class="line">       ltfs_ordered_copy is a program to <span class="keyword">copy</span> files <span class="keyword">from</span> <span class="keyword">source</span> to destination with LTFS order optimization.  <span class="keyword">This</span> command tries to acquire <span class="keyword">file</span> list to <span class="keyword">copy</span> to DESTINATION when no <span class="keyword">SOURCE</span> is specified.</span><br><span class="line"></span><br><span class="line"><span class="keyword">OPTIONS</span></span><br><span class="line">       These programs follow the usual GNU command line syntax, with <span class="keyword">long</span> <span class="keyword">options</span> starting with two dashes (<span class="string">&#x27;-&#x27;</span>). A summary of <span class="keyword">options</span> is included below. <span class="keyword">For</span> a complete <span class="keyword">description</span>, see the Info files.</span><br><span class="line"></span><br><span class="line">       -p     preserve attributes with shutil.copy2() in Python interpriter</span><br><span class="line"></span><br><span class="line">       -r, --recursive</span><br><span class="line">              <span class="keyword">copy</span> directories recursively</span><br><span class="line"></span><br><span class="line">       -t, --target-directory=TARGET_DIRECTORY</span><br><span class="line">              <span class="keyword">copy</span> all <span class="keyword">SOURCE</span> arguments <span class="keyword">into</span> TARGET_DIRECTORY</span><br><span class="line"></span><br><span class="line">       --keep_tree=CUTOFF_PREFIX</span><br><span class="line">              CUTOFF_PREFIX, effective only when <span class="keyword">file</span> list is provided <span class="keyword">from</span> stdin and keep-tree option is enabled. CUTOFF_PREFIX is removed <span class="keyword">from</span> the <span class="keyword">file</span> paths copied to the destination.</span><br><span class="line"></span><br><span class="line">       -a, --all</span><br><span class="line">              achieve files recursively and preserve attributes</span><br><span class="line"></span><br><span class="line">       -v     Verbose output. Set VERBOSE level <span class="number">5</span></span><br><span class="line"></span><br><span class="line">       --verbose=LOG_LEVEL</span><br><span class="line">              Configure verbosity of logger. VERBOSE shall be <span class="number">0</span>-<span class="number">6</span>. (<span class="keyword">Default</span>: <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">       -q, --quiet</span><br><span class="line">              No message outout</span><br><span class="line"></span><br><span class="line">COMMAND EXAMPLES</span><br><span class="line">       <span class="keyword">This</span> section shows various command examples.</span><br><span class="line"></span><br><span class="line">   SIMPLE USAGE</span><br><span class="line">       <span class="keyword">Copy</span> <span class="keyword">file</span> <span class="regexp">/foo/</span>aaa to <span class="keyword">file</span> <span class="regexp">/foo/</span>bbb</span><br><span class="line"></span><br><span class="line">              $ ltfs_ordered_copy <span class="regexp">/foo/</span>aaa <span class="regexp">/foo/</span>bbb</span><br><span class="line"></span><br><span class="line">       <span class="keyword">Copy</span> <span class="keyword">file</span> <span class="regexp">/foo/</span>aaa and <span class="regexp">/foo/</span>bbb to directory <span class="regexp">/bar/</span></span><br><span class="line"></span><br><span class="line">              % ltfs_ordered_copy <span class="regexp">/foo/</span>aaa <span class="regexp">/foo/</span>bbb /bar</span><br><span class="line"></span><br><span class="line">       <span class="keyword">Copy</span> directory <span class="regexp">/foo/</span>ddd and <span class="regexp">/foo/</span>DDD to directory <span class="regexp">/bar/</span></span><br><span class="line"></span><br><span class="line">              % ltfs_ordered_copy <span class="regexp">/foo/</span>ddd <span class="regexp">/foo/</span>DDD /bar</span><br><span class="line"></span><br><span class="line">   HOW TO USE WITH <span class="keyword">FIND</span> COMMAND</span><br><span class="line">       <span class="keyword">Copy</span> all files under <span class="regexp">/foo/</span>ddd to directory /bar</span><br><span class="line"></span><br><span class="line">              $ <span class="keyword">find</span> <span class="regexp">/foo/</span>ddd -type f | ltfs_ordered_copy -t /bar</span><br><span class="line"></span><br><span class="line">       <span class="keyword">Copy</span> all directories just under <span class="regexp">/foo/</span>ddd to directory /bar</span><br><span class="line"></span><br><span class="line">              $ <span class="keyword">find</span> <span class="regexp">/foo/</span>ddd -type d -maxdepth <span class="number">1</span> | ltfs_ordered_copy -t /bar</span><br><span class="line"></span><br><span class="line">       <span class="keyword">Copy</span> all files just under <span class="regexp">/foo/</span>ddd to directory <span class="regexp">/bar with keeping tree (Chop /</span>foo/ddd <span class="keyword">from</span> <span class="keyword">source</span> list)</span><br><span class="line"></span><br><span class="line">              $ <span class="keyword">find</span> <span class="regexp">/foo/</span>ddd -type f | ltfs_ordered_copy -t <span class="regexp">/bar --keep-tree=/</span>foo/ddd</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>数据储存</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 添加触控板手势</title>
    <url>/blog/2022/12/27/Linux-%E6%B7%BB%E5%8A%A0%E8%A7%A6%E6%8E%A7%E6%9D%BF%E6%89%8B%E5%8A%BF/</url>
    <content><![CDATA[<p>Linux 下添加触控板手势可以使用<code>libinput-gestures</code>、<code>fusuma</code>、<code>Gebaar</code>和<code>GnomeExtendedGestures</code>等软件包来实现，在本文中，我使用的是<code>libinput-gestures</code>这个软件包。</p>
<span id="more"></span>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="添加当前用户到input组"><a href="#添加当前用户到input组" class="headerlink" title="添加当前用户到input组"></a>添加当前用户到<code>input</code>组</h2><p>在终端中执行此命令：</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">sudo gpasswd -a $<span class="keyword">USER</span> <span class="title">input</span></span><br></pre></td></tr></table></figure>
<p>之后，重启系统使配置生效。</p>
<h2 id="安装相应依赖"><a href="#安装相应依赖" class="headerlink" title="安装相应依赖"></a>安装相应依赖</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># E.g. On Arch:</span></span><br><span class="line">sudo pacman -S wmctrl xdotool</span><br><span class="line"></span><br><span class="line"><span class="comment"># E.g. On Debian based systems, e.g. Ubuntu:</span></span><br><span class="line">sudo apt-get <span class="keyword">install</span> wmctrl xdotool libinput-tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># E.g. On Fedora:</span></span><br><span class="line">sudo dnf <span class="keyword">install</span> wmctrl xdotool</span><br></pre></td></tr></table></figure>

<h2 id="安装libinput-gestures"><a href="#安装libinput-gestures" class="headerlink" title="安装libinput-gestures"></a>安装<code>libinput-gestures</code></h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/bulletmark/</span>libinput-gestures.git --depth=<span class="number">1</span></span><br><span class="line">cd libinput-gestures</span><br><span class="line">sudo make install (or sudo ./libinput-gestures-setup install)</span><br></pre></td></tr></table></figure>

<p>至此，已经完成了所以安装步骤，现在可以使用以下命令启动<code>libinput-gestures</code>：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">libinput-gestures-setup <span class="built_in">auto</span>start start</span><br></pre></td></tr></table></figure>
<p>启动后，应该可以使用一些默认的手势。</p>
<div class="note "><p>如果出错，可以看看是否忘记了 添加当前用户到<code>input</code>组 （注意重启系统不能被省略）</p>
</div>

<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>全局配置文件为<code>/etc/libinput-gestures.conf</code>，当然也可以使用用户个人配置文件：<code>~/.config/libinput-gestures.conf</code>。</p>
<p>配置文件中的说明和例子非常详细，此处不再重复。</p>
<p>完成配置文件编写后，可以使用以下命令来重新载入配置：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">libinput-gestures-setup restart</span><br></pre></td></tr></table></figure>

<p>附：<br><a href="https://gitlab.com/cunidev/gestures/-/wikis/xdotool-list-of-key-codes">xdotool list of key codes</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://github.com/bulletmark/libinput-gestures">https://github.com/bulletmark/libinput-gestures</a><br><a href="https://wiki.archlinuxcn.org/wiki/Libinput">https://wiki.archlinuxcn.org/wiki/Libinput</a><br><a href="https://blog.csdn.net/qq_37284020/article/details/105441741">https://blog.csdn.net/qq_37284020/article/details/105441741</a><br><a href="https://blog.csdn.net/u011387521/article/details/106685600">https://blog.csdn.net/u011387521/article/details/106685600</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝牙显示耳机电量</title>
    <url>/blog/2022/12/27/%E8%93%9D%E7%89%99%E6%98%BE%E7%A4%BA%E8%80%B3%E6%9C%BA%E7%94%B5%E9%87%8F/</url>
    <content><![CDATA[<p>在 <code>KUbuntu 22.04</code> 中，默认是不会显示已连接的蓝牙耳机的电量的，如果要显示耳机电量，则需要启用 实验性 功能。</p>
<span id="more"></span>
<div class="note "><p>启用这个功能可能会阻止某些蓝牙鼠标自动连接，具体可见：<a href="https://github.com/bluez/bluez/issues/236">https://github.com/bluez/bluez/issues/236</a></p>
</div>

<h1 id="修改-etc-bluetooth-main-conf"><a href="#修改-etc-bluetooth-main-conf" class="headerlink" title="修改 /etc/bluetooth/main.conf"></a>修改 <code>/etc/bluetooth/main.conf</code></h1><p>在<code>/etc/bluetooth/main.conf</code>中的<code>[General]</code>节添加：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">Experimental</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">KernelExperimental</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h1 id="重启bluetooth-service"><a href="#重启bluetooth-service" class="headerlink" title="重启bluetooth.service"></a>重启<code>bluetooth.service</code></h1><p>在命令行中运行</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">restart</span> bluetooth.service</span><br></pre></td></tr></table></figure>

<p>然后重新连接蓝牙耳机，如果不出意外，这个时候就能在蓝牙连接的地方看到设备的电量。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://wiki.archlinux.org/title/Bluetooth_headset#Battery_level_reporting">https://wiki.archlinux.org/title/Bluetooth_headset#Battery_level_reporting</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>OverlayFS文件系统的介绍与使用</title>
    <url>/blog/2022/12/27/OverlayFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p><code>OverlayFS</code>是一种堆叠文件系统，可以做到写时复制。</p>
<span id="more"></span>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/436450556">https://zhuanlan.zhihu.com/p/436450556</a><br><a href="https://www.zhihu.com/question/484243766">https://www.zhihu.com/question/484243766</a><br><a href="https://zhuanlan.zhihu.com/p/93273517">https://zhuanlan.zhihu.com/p/93273517</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文件系统缓存管理工具 vmtouch</title>
    <url>/blog/2023/01/09/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-vmtouch/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>对于<code>debian</code>系：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> vmtouch</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h1 id="查看缓存情况"><a href="#查看缓存情况" class="headerlink" title="查看缓存情况"></a>查看缓存情况</h1><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">vmtouch</span> 文件或目录名</span><br></pre></td></tr></table></figure>

<h1 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h1><p><code>vmtouch</code>还可以将文件载入缓存或锁定缓存，具体可见官方文档：<br><a href="https://github.com/hoytech/vmtouch/blob/master/vmtouch.pod">https://github.com/hoytech/vmtouch/blob/master/vmtouch.pod</a></p>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>提问的智慧</title>
    <url>/blog/2023/01/15/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</url>
    <content><![CDATA[<p><strong>How To Ask Questions The Smart Way</strong></p>
<p>Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen</p>
<p>本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。</p>
<p>原文网址：<a href="http://www.catb.org/~esr/faqs/smart-questions.html">http://www.catb.org/~esr&#x2F;faqs&#x2F;smart-questions.html</a></p>
<p>Copyleft 2001 by D.H.Grand(nOBODY&#x2F;Ginux), 2010 by Gasolin, 2015 by Ryan Wu</p>
<p>本中文指南是基于原文 3.10 版以及 2010 年由 <a href="https://github.com/gasolin">Gasolin</a> 所翻译版本的最新翻译；</p>
<p>协助指出翻译问题，<strong>请<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/issues/new">发 issue</a>，或直接<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/compare">发 pull request</a> 给我。</strong></p>
<p>本文修改自：<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md</a> ，使用 MIT 许可证。</p>
<span id="more"></span>

<h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>许多项目在他们的使用协助&#x2F;说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：</p>
<p><strong>本指南不提供此项目的实际支持服务！</strong></p>
<p>我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。</p>
<p>如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件或硬件问题的人处取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。</p>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>在<a href="http://www.catb.org/~esr/faqs/hacker-howto.html">黑客</a>的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确地提问以获得你满意的答案。</p>
<p>现在开源（Open Source）软件已经相当盛行，您通常可以从其他更有经验的用户那里获得与黑客一样好的答案，这是件<strong>好事</strong>；和黑客相比，用户们往往对那些新手常遇到的问题更宽容一些。尽管如此，以我们在此推荐的方式对待这些有经验的用户通常也是从他们那里获得有用答案的最有效方式。</p>
<p>首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。</p>
<p>尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。</p>
<p>我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 <code>失败者（撸瑟）</code> （由于历史原因，我们有时把它拼作 <code>lusers</code>）。</p>
<p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。</p>
<p>我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情地滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效地利用时间来回答<code>赢家（winner）</code>的问题。</p>
<p>如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。</p>
<p>所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。</p>
<p>如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。</p>
<p>（欢迎对本指南提出改进意见。你可以把你的建议发送至 <a href="esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。然而请注意，本文并非<a href="http://www.ietf.org/rfc/rfc1855.txt">网络礼节</a>的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。</p>
<h1 id="在提问之前"><a href="#在提问之前" class="headerlink" title="在提问之前"></a>在提问之前</h1><p>在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：</p>
<ol>
<li>尝试在你准备提问的论坛的旧文章中搜索答案。</li>
<li>尝试上网搜索以找到答案。</li>
<li>尝试阅读手册以找到答案。</li>
<li>尝试阅读常见问题文件（FAQ）以找到答案。</li>
<li>尝试自己检查或试验以找到答案。</li>
<li>向你身边的强者朋友打听以找到答案。</li>
<li>如果你是程序开发者，请尝试阅读源代码以找到答案。</li>
</ol>
<p>当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所<strong>学到</strong>的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。</p>
<p>运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 <a href="http://groups.google.com/">Google 论坛</a>和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 <code>我在 Google 中搜过下列句子但没有找到什么有用的东西</code> 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。</p>
<p>别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐得舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。</p>
<p>准备好你的问题，再将问题仔细地思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。</p>
<p>小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着<code>蠢问题…</code>，一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。</p>
<p>绝不要自以为<strong>够格</strong>得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去<strong>挣到</strong>一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动地从他人处索取知识。</p>
<p>另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。<code>谁能给点提示？</code>、<code>我的这个例子里缺了什么？</code>以及<code>我应该检查什么地方</code>比<code>请把我需要的确切的过程贴出来</code>更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。</p>
<h1 id="当你提问时"><a href="#当你提问时" class="headerlink" title="当你提问时"></a>当你提问时</h1><h2 id="慎选提问的论坛"><a href="#慎选提问的论坛" class="headerlink" title="慎选提问的论坛"></a>慎选提问的论坛</h2><p>小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：</p>
<ul>
<li>在与主题不合的论坛上贴出你的问题。</li>
<li>在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。</li>
<li>在太多的不同新闻群组上重复转贴同样的问题（cross-post）。</li>
<li>向既非熟人也没有义务解决你问题的人发送私人电邮。</li>
</ul>
<p>黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。</p>
<p>因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括<strong>阅读</strong> FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。</p>
<p>向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。</p>
<p>在选择论坛、新闻群组或邮件列表时，别太相信它的名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p>
<p>别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。</p>
<p>搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。</p>
<p>一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。</p>
<p>可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者由于涌入其私人邮箱的大量不堪忍受的无用邮件而不再提供支持。</p>
<h2 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h2><p>搜索，<em>然后</em>在 Stack Exchange 问。</p>
<p>近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。</p>
<p>因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的几率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。</p>
<p>如果你还是找不到任何对你的问题有用的内容，请把你的问题发在与它最相关的网站上。提问的时候请善用格式化工具，尤其注意为代码添加格式，并且添加相关的标签（特别是编程语言、操作系统或库&#x2F;包的名称）。当有人要求你提供更多相关信息时，请编辑你的贴子来补充它们[译注：而不是发一个回帖或回答！]。如果你觉得一个答案对你有帮助，点击向上的箭头来为它投票；如果一个答案提供了问题的正确解决方案，点击投票按钮下方的对勾来将它标记为正解。</p>
<p>Stack Exchange 已经成长到<a href="https://stackexchange.com/sites">超过一百个网站</a>，以下是最常用的几个站：</p>
<ul>
<li>Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。</li>
<li>Stack Overflow 是问写程序有关的问题。</li>
<li>Server Fault 是问服务器和网管相关的问题。</li>
</ul>
<h2 id="网站和-IRC-论坛"><a href="#网站和-IRC-论坛" class="headerlink" title="网站和 IRC 论坛"></a>网站和 IRC 论坛</h2><p>本地的用户群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表），这些都是开始提问的好地方，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。</p>
<p>事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复“使用<strong>我们的</strong>版本”。</p>
<p>在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p>
<p>通过论坛或 IRC 频道来提供用户支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。</p>
<p>在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。</p>
<h2 id="第二步，使用项目邮件列表"><a href="#第二步，使用项目邮件列表" class="headerlink" title="第二步，使用项目邮件列表"></a>第二步，使用项目邮件列表</h2><p>当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：</p>
<ul>
<li>任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，那这也不能成为骚扰个别开发者的理由。</li>
<li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。</li>
<li>大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其他人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li>
<li>如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li>
</ul>
<p>如果一个项目既有“用户”也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。</p>
<p>然而，如果你<strong>确信</strong>你的问题很特别，而且在“用户”列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p>
<p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p>
<h2 id="使用有意义且描述明确的标题"><a href="#使用有意义且描述明确的标题" class="headerlink" title="使用有意义且描述明确的标题"></a>使用有意义且描述明确的标题</h2><p>在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的<code>帮帮忙</code>、<code>跪求</code>、<code>急</code>（更别说<code>救命啊！！！！</code>这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。</p>
<p>一个好标题范例是<code>目标 —— 差异</code>式的描述，许多技术支持组织就是这样做的。在<code>目标</code>部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p>
<blockquote>
<p>蠢问题：救命啊！我的笔记本电脑不能正常显示了！<br>聪明问题：X.org 6.8.1 的鼠标指针会变形，某牌显卡 MV1005 芯片组。<br>更聪明问题：X.org 6.8.1 的鼠标指针，在某牌显卡 MV1005 芯片组环境下 - 会变形。<br>编写<code>目标 —— 差异</code> 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标指针或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境<strong>和</strong>你遇到的问题。</p>
</blockquote>
<p>总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。</p>
<p>如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 <code>Re: 测试</code> 或者 <code>Re: 新 bug</code> 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。</p>
<p>对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许用户按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。</p>
<p>仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。</p>
<p>在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你<strong>只想</strong>在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。</p>
<h2 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h2><p>以<code>请将你的回复发送到……</code>来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，<a href="http://linuxmafia.com/faq/Mail/muas.html">换个好点的</a>；如果是操作系统不支持这种邮件程序，也换个好点的。</p>
<p>在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如<code>追踪此讨论串</code>、<code>有回复时发送邮件提醒</code>等功能。</p>
<h2 id="使用清晰、正确、精准且合乎语法的语句”-gt-使用清晰、正确、精准且合乎语法的语句"><a href="#使用清晰、正确、精准且合乎语法的语句”-gt-使用清晰、正确、精准且合乎语法的语句" class="headerlink" title="使用清晰、正确、精准且合乎语法的语句”&gt;使用清晰、正确、精准且合乎语法的语句"></a>使用清晰、正确、精准且合乎语法的语句”&gt;使用清晰、正确、精准且合乎语法的语句</h2><p>我们从经验中发现，粗心的提问者通常也会粗心地写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。</p>
<p>正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它<strong>必须很</strong>准确，而且有迹象表明你是在思考和关注问题。</p>
<p>正确地拼写、使用标点和大小写，不要将<code>its</code>混淆为<code>it&#39;s</code>，<code>loose</code>搞成<code>lose</code>或者将<code>discrete</code>弄成<code>discreet</code>。不要<strong>全部用大写</strong>，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。<a href="http://en.wikipedia.org/wiki/Alan_Cox">Alan Cox</a> 也许可以这样做，但你不行）。</p>
<p>更白话的说，如果你写得像是个半文盲[译注：<a href="http://zh.wikipedia.org/wiki/%E5%B0%8F%E7%99%BD">小白</a>]，那多半得不到理睬。也不要使用即时通信中的简写或<a href="http://zh.wikipedia.org/wiki/%E7%81%AB%E6%98%9F%E6%96%87">火星文</a>，如将<code>的</code>简化为<code>d</code>会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p>
<p>如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂的语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。</p>
<p>如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：<br>[译注：以下附上原文以供使用]</p>
<blockquote>
<p>English is not my native language; please excuse typing errors.</p>
</blockquote>
<ul>
<li>英文不是我的母语，请原谅我的错字或语法。</li>
</ul>
<blockquote>
<p>If you speak $LANGUAGE, please email&#x2F;PM me;<br>I may need assistance translating my question.</p>
</blockquote>
<ul>
<li>如果你说<strong>某语言</strong>，请向我发电邮&#x2F;私信；</li>
<li>我需要有人协助我翻译我的问题。</li>
</ul>
<blockquote>
<p>I am familiar with the technical terms,<br>but some slang expressions and idioms are difficult for me.</p>
</blockquote>
<ul>
<li>我对技术名词很熟悉，但对于俗语或是特别用法不甚了解。</li>
</ul>
<blockquote>
<p>I’ve posted my question in $LANGUAGE and English.<br>I’ll be glad to translate responses, if you only use one or the other.</p>
</blockquote>
<ul>
<li>我把我的问题用<strong>某语言</strong>和英文写出来。</li>
<li>如果你只用其中的一种语言回答，我会乐意将回复翻译成为你使用的语言。</li>
</ul>
<h2 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h2><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p>
<ul>
<li>使用纯文字而不是 HTML (<a href="http://archive.birdhouse.org/etc/evilmail.html">关闭 HTML</a> 并不难）。</li>
<li>使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。</li>
<li>不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。</li>
<li>但是，对一些特殊的文件<strong>不要</strong>设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。</li>
<li>在英语论坛中，不要使用<code>Quoted-Printable</code> MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的<code>=20</code>符号既难看也分散注意力，甚至有可能破坏内容的语意。</li>
<li>绝对，<strong>永远</strong>不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。</li>
<li>如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的<code>智能引号</code>功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉<code>智能引号</code>单选框），以免在你的邮件中到处散布垃圾字符。</li>
<li>在论坛，勿滥用<code>表情符号</code>和<code>HTML</code>功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。</li>
</ul>
<p>如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的<code>查看源代码</code>命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。</p>
<h2 id="精确地描述问题并言之有物"><a href="#精确地描述问题并言之有物" class="headerlink" title="精确地描述问题并言之有物"></a>精确地描述问题并言之有物</h2><ul>
<li>仔细、清楚地描述你的问题或 Bug 的症状。</li>
<li>描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：<code>Fedora Core 4</code>、<code>Slackware 9.1</code>等）。</li>
<li>描述在提问前你是怎样去研究和理解这个问题的。</li>
<li>描述在提问前为确定问题而采取的诊断步骤。</li>
<li>描述最近做过什么可能相关的硬件或软件变更。</li>
<li>尽可能地提供一个可以<code>重现这个问题的可控环境</code>的方法。</li>
</ul>
<p>尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能提出的问题回答一遍。</p>
<p>以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。</p>
<p><a href="http://www.chiark.greenend.org.uk/~sgtatham/">Simon Tatham</a> 写过一篇名为《<a href="http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html">如何有效的报告 Bug</a>》的出色文章。强力推荐你也读一读。</p>
<h2 id="话不在多而在精"><a href="#话不在多而在精" class="headerlink" title="话不在多而在精"></a>话不在多而在精</h2><p>你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。</p>
<p>这样做的用处至少有三点。<br>第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；<br>第二，简化问题使你更有可能得到<strong>有用</strong>的答案；<br>第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。</p>
<h2 id="别动辄声称找到-Bug"><a href="#别动辄声称找到-Bug" class="headerlink" title="别动辄声称找到 Bug"></a>别动辄声称找到 Bug</h2><p>当你在使用软件中遇到问题，除非你非常、<strong>非常</strong>的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的<code>Bug</code>，你应该能提供相应位置的修正或替代文件。</p>
<p>请记得，还有其他许多用户没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前<a href="#%E5%9C%A8%E6%8F%90%E9%97%AE%E4%B9%8B%E5%89%8D">已经做了这些，是吧</a>？）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p>
<p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有<code>Bug</code>时，这尤其严重。</p>
<p>提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是<strong>你</strong>做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。</p>
<h2 id="低声下气不能代替你的功课"><a href="#低声下气不能代替你的功课" class="headerlink" title="低声下气不能代替你的功课"></a>低声下气不能代替你的功课</h2><p>有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：<code>我知道我只是个可悲的新手，一个撸瑟，但...</code>。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。</p>
<p>别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。</p>
<p>有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。</p>
<h2 id="描述问题症状而非你的猜测"><a href="#描述问题症状而非你的猜测" class="headerlink" title="描述问题症状而非你的猜测"></a>描述问题症状而非你的猜测</h2><p>告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。</p>
<p><strong>蠢问题</strong></p>
<blockquote>
<p>我在编译内核时接连遇到 SIG11 错误，<br>我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？<br><strong>聪明问题</strong><br>我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6&#x2F;233 CPU（威盛 Apollo VP2 芯片组），<br>256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，<br>但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。<br>所有内存都换过了，没有效果。相关部分的标准编译记录如下…<br>由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：<code>所有的诊断专家都来自密苏里州。</code> 美国国务院的官方座右铭则是：<code>让我看看</code>（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：<code>我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。</code>） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方地展示给我们看吧！</p>
</blockquote>
<h2 id="按发生时间先后列出问题症状"><a href="#按发生时间先后列出问题症状" class="headerlink" title="按发生时间先后列出问题症状"></a>按发生时间先后列出问题症状</h2><p>问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</p>
<p>如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，<code>多</code>不等于<code>好</code>。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。</p>
<p>如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。</p>
<h2 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h2><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p>
<p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p>
<p><strong>蠢问题</strong></p>
<blockquote>
<p>我怎样才能从某绘图程序的颜色选择器中取得十六进制的 RGB 值？<br><strong>聪明问题</strong><br>我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），<br>但却无法从某绘图程序的颜色选择器取得十六进制的 RGB 值。<br>第二种提问法比较聪明，你可能得到像是<code>建议采用另一个更合适的工具</code>的回复。</p>
</blockquote>
<h2 id="别要求使用私人电邮回复"><a href="#别要求使用私人电邮回复" class="headerlink" title="别要求使用私人电邮回复"></a>别要求使用私人电邮回复</h2><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。</p>
<p>当你要求私下回复时，这个过程和奖励都被中止。别这样做，让<strong>回复者</strong>来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于不可能使其他人产生兴趣。</p>
<p>这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是<code>向我发电邮，我将为论坛归纳这些回复</code>。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。</p>
<h2 id="清楚明确地表达你的问题以及需求"><a href="#清楚明确地表达你的问题以及需求" class="headerlink" title="清楚明确地表达你的问题以及需求"></a>清楚明确地表达你的问题以及需求</h2><p>漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。</p>
<p>如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。</p>
<p>要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。</p>
<p>所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你获得有用的答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问<code>我想更好地理解 X，可否指点一下哪有好一点说明？</code>通常比问<code>你能解释一下 X 吗？</code>更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。</p>
<h2 id="询问有关代码的问题时"><a href="#询问有关代码的问题时" class="headerlink" title="询问有关代码的问题时"></a>询问有关代码的问题时</h2><p>如果没有提示别人应该从何入手，别要求他人帮你调试有问题的代码。张贴几百行的代码，然后说一声：<code>它不能工作</code>会让你完全被忽略。只贴几十行代码，然后说一句：<code>在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;</code>比较有可能让你得到回应。</p>
<p>最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能<strong>刚好</strong>展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译&#x2F;直译&#x2F;被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看<a href="#%E8%AF%9D%E4%B8%8D%E5%9C%A8%E5%A4%9A%E8%80%8C%E5%9C%A8%E7%B2%BE">话不在多而在精</a>一节）。</p>
<p>一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做是一个好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。</p>
<p>如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p>
<h2 id="别把自己家庭作业的问题贴上来"><a href="#别把自己家庭作业的问题贴上来" class="headerlink" title="别把自己家庭作业的问题贴上来"></a>别把自己家庭作业的问题贴上来</h2><p>黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由<strong>你</strong>来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。</p>
<p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户群组，论坛或（最后一招）在项目的<strong>用户</strong>邮件列表或论坛中提问。尽管黑客们<strong>会</strong>看出来，但一些有经验的用户也许仍会给你一些提示。</p>
<h2 id="去掉无意义的提问句"><a href="#去掉无意义的提问句" class="headerlink" title="去掉无意义的提问句"></a>去掉无意义的提问句</h2><p>避免用无意义的话结束提问，例如<code>有人能帮我吗？</code>或者<code>这有答案吗？</code>。</p>
<p>首先：如果你对问题的描述不是很好，这样问更是画蛇添足。</p>
<p>其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：<code>没错，有人能帮你</code>或者<code>不，没答案</code>。</p>
<p>一般来说，避免用 <code>是或否</code>、<code>对或错</code>、<code>有或没有</code>类型的问句，除非你想得到<a href="https://strcat.de/questions-with-yes-or-no-answers.html">是或否类型的回答</a>。</p>
<h2 id="即使你很急也不要在标题写紧急"><a href="#即使你很急也不要在标题写紧急" class="headerlink" title="即使你很急也不要在标题写紧急"></a>即使你很急也不要在标题写<code>紧急</code></h2><p>这是你的问题，不是我们的。宣称<code>紧急</code>极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，<code>紧急</code>这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。</p>
<p>有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。</p>
<p>当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如<code>紧急：帮我救救这个毛茸茸的小海豹！</code>肯定让你被黑客忽略或惹恼他们，即使他们认为毛茸茸的小海豹很重要。</p>
<p>如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。</p>
<h2 id="礼多人不怪，而且有时还很有帮助"><a href="#礼多人不怪，而且有时还很有帮助" class="headerlink" title="礼多人不怪，而且有时还很有帮助"></a>礼多人不怪，而且有时还很有帮助</h2><p>彬彬有礼，多用<code>请</code>和<code>谢谢您的关注</code>，或<code>谢谢你的关照</code>。让大家都知道你对他们花时间免费提供帮助心存感激。</p>
<p>坦白说，这一点并没有比使用清晰、正确、精准且合乎语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）</p>
<p>然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。</p>
<p>（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得<code>先谢了</code>意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说<code>先谢了</code>，<strong>然后</strong>事后再对回复者表示感谢，或者换种方式表达感激，譬如用<code>谢谢你的关注</code>或<code>谢谢你的关照</code>。）</p>
<h2 id="问题解决后，加个简短的补充说明"><a href="#问题解决后，加个简短的补充说明" class="headerlink" title="问题解决后，加个简短的补充说明"></a>问题解决后，加个简短的补充说明</h2><p>问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。</p>
<p>最理想的方式是向最初提问的话题回复此消息，并在标题中包含<code>已修正</code>，<code>已解决</code>或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串<code>问题 X</code>和<code>问题 X - 已解决</code>的潜在回复者就明白不用再浪费时间了（除非他个人觉得<code>问题 X</code>有趣），因此可以利用此时间去解决其它问题。</p>
<p>补充说明不必很长或是很深入；简单的一句<code>你好，原来是网线出了问题！谢谢大家 – Bill</code>比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。</p>
<p>对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此<strong>之后</strong>才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。</p>
<p>除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表&#x2F;新闻群组&#x2F;论坛中搜索到真正解决你问题的方案，让他们也从中受益。</p>
<p>至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。</p>
<p>思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。</p>
<p>在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。</p>
<h1 id="如何解读答案"><a href="#如何解读答案" class="headerlink" title="如何解读答案"></a>如何解读答案</h1><p><a id="rtfm"></a></p>
<h2 id="RTFM-和-STFW：如何知道你已完全搞砸了"><a href="#RTFM-和-STFW：如何知道你已完全搞砸了" class="headerlink" title="RTFM 和 STFW：如何知道你已完全搞砸了"></a>RTFM 和 STFW：如何知道你已完全搞砸了</h2><p>有一个古老而神圣的传统：如果你收到<code>RTFM（Read The Fucking Manual）</code>的回应，回答者认为你<strong>应该去读他妈的手册</strong>。当然，基本上他是对的，你应该去读一读。</p>
<p>RTFM 有一个年轻的亲戚。如果你收到<code>STFW（Search The Fucking Web）</code>的回应，回答者认为你<strong>应该到他妈的网上搜索</strong>。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 <strong><a href="http://lmgtfy.com/">Google 是你的朋友</a></strong> ！）</p>
<p>在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。</p>
<p>通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为：</p>
<ul>
<li><strong>你需要的信息非常容易获得</strong>；</li>
<li><strong>你自己去搜索这些信息比灌给你，能让你学到更多</strong>。</li>
</ul>
<p>你不应该因此不爽；<strong>依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见</strong>。你应该对他祖母般的慈祥表示感谢。</p>
<h2 id="如果还是搞不懂"><a href="#如果还是搞不懂" class="headerlink" title="如果还是搞不懂"></a>如果还是搞不懂</h2><p>如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。</p>
<p>比方说，如果我回答你：<code>看来似乎是 zentry 卡住了；你应该先清除它。</code>，然后，这是一个<strong>很糟的</strong>后续问题回应：<code>zentry 是什么？</code> <strong>好</strong>的问法应该是这样：<code>哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？</code></p>
<h2 id="处理无礼的回应"><a href="#处理无礼的回应" class="headerlink" title="处理无礼的回应"></a>处理无礼的回应</h2><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直截了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。</p>
<p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这<strong>没有</strong>发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而<strong>你</strong>将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p>
<p>另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p>
<p>（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会<strong>正常</strong>交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们<strong>喜欢</strong>我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。）</p>
<p>Jeff Bigler 的观察总结和这个相关也值得一读 (<strong><a href="http://www.mit.edu/~jcb/tact.html">tact filters</a></strong>)。</p>
<p>在下一节，我们会谈到另一个问题，当<strong>你</strong>行为不当时所会受到的<code>冒犯</code>。</p>
<h1 id="如何避免扮演失败者"><a href="#如何避免扮演失败者" class="headerlink" title="如何避免扮演失败者"></a>如何避免扮演失败者</h1><p>在黑客社区的论坛中，你以本指南所描述的或类似的方式，可能会有那么几次搞砸了。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。</p>
<p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被言语攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、不去关马桶盖等等。相反地，你该这么做：</p>
<p>熬过去，这很正常。事实上，它是有益健康且合理的。</p>
<p>社区的标准不会自行维持，它们是通过参与者积极而<strong>公开地</strong>执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p>
<p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称<code>如果你不想帮助用户就闭嘴。</code> 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。</p>
<p>夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。</p>
<p>记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心<strong>你</strong>和<strong>他的社区</strong>而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。</p>
<p>有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是<strong>真的</strong>会把问题搞砸。</p>
<p>这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。</p>
<p>也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。</p>
<h1 id="不该问的问题"><a href="#不该问的问题" class="headerlink" title="不该问的问题"></a>不该问的问题</h1><p>以下是几个经典蠢问题，以及黑客没回答时心中所想的：</p>
<p>问题：<a href="#q1">我能在哪找到 X 程序或 X 资源？</a></p>
<p>问题：<a href="#q2">我怎样用 X 做 Y？</a></p>
<p>问题：<a href="#q3">如何设定我的 shell 提示？</a></p>
<p>问题：<a href="#q4">我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？</a></p>
<p>问题：<a href="#q5">我的程序&#x2F;设定&#x2F;SQL 语句没有用</a></p>
<p>问题：<a href="#q6">我的 Windows 电脑有问题，你能帮我吗？</a></p>
<p>问题：<a href="#q7">我的程序不会动了，我认为系统工具 X 有问题</a></p>
<p>问题：<a href="#q8">我在安装 Linux（或者 X ）时有问题，你能帮我吗？</a></p>
<p>问题：<a href="#q9">我怎么才能破解 root 帐号&#x2F;窃取 OP 特权&#x2F;读别人的邮件呢？</a></p>
<hr>
<p><a id="q1"></a></p>
<blockquote>
<p>问题：我能在哪找到 X 程序或 X 资源？<br>回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 <a href="https://www.google.com/">Google</a> 吗？</p>
</blockquote>
<p><a id="q2"></a></p>
<blockquote>
<p>问题：我怎样用 X 做 Y？<br>回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。</p>
</blockquote>
<p><a id="q3"></a></p>
<blockquote>
<p>问题：如何设定我的 shell 提示？？<br>回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 <a href="#RTFM">RTFM</a>，然后自己去找出来。</p>
</blockquote>
<p><a id="q4"></a></p>
<blockquote>
<p>问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？<br>回答：试试看就知道了。如果你试过，你就知道了答案，就不用浪费我的时间了。</p>
</blockquote>
<p><a id="q5"></a></p>
<blockquote>
<p>问题：我的{程序&#x2F;设定&#x2F;SQL 语句}没有用<br>回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种</p>
<ul>
<li>你还有什么要补充的吗？</li>
<li>真糟糕，希望你能搞定。</li>
<li>这关我屁事？</li>
</ul>
</blockquote>
<p><a id="q6"></a></p>
<blockquote>
<p>问题：我的 Windows 电脑有问题，你能帮我吗？<br>回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。</p>
<p>注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你<strong>可以</strong>问与 Windows 相关的问题，只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。</p>
</blockquote>
<p><a id="q7"></a></p>
<blockquote>
<p>问题：我的程序不会动了，我认为系统工具 X 有问题<br>回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。</p>
</blockquote>
<p><a id="q8"></a></p>
<blockquote>
<p>问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？<br>回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在<a href="http://www.linux.org/groups/index.html">这儿</a>找到用户群组的清单）。</p>
<p>注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地用户群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 <code>Linux</code> 和<strong>所有</strong>被怀疑的硬件作关键词仔细搜索。</p>
</blockquote>
<p><a id="q9"></a></p>
<blockquote>
<p>问题：我怎么才能破解 root 帐号&#x2F;窃取 OP 特权&#x2F;读别人的邮件呢？<br>回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！</p>
</blockquote>
<h1 id="好问题与蠢问题"><a href="#好问题与蠢问题" class="headerlink" title="好问题与蠢问题"></a>好问题与蠢问题</h1><p>最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。</p>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我可以在哪儿找到关于 Foonly Flurbamatic 的资料？<br>这种问法无非想得到 <a href="#RTFM">STFW</a> 这样的回答。</p>
</blockquote>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？<br>这个问题已经 STFW 过了，看起来他真的遇到了麻烦。</p>
</blockquote>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我从 foo 项目找来的源码没法编译。它怎么这么烂？<br>他觉得都是别人的错，这个傲慢自大的提问者。</p>
</blockquote>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？<br>提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。</p>
</blockquote>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我的主机板有问题了，谁来帮我？<br>某黑客对这类问题的回答通常是：<code>好的，还要帮你拍拍背和换尿布吗？</code>，然后按下删除键。</p>
</blockquote>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？<br>这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。</p>
</blockquote>
<p>在最后一个问题中，注意<code>告诉我答案</code>和<code>给我启示，指出我还应该做什么诊断工作</code>之间微妙而又重要的区别。</p>
<p>事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。</p>
<p>通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。</p>
<p>事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候，一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的<strong>名</strong>人，而是因为我用了正确的方式来提问。</p>
<p>黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我<strong>像</strong>个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。</p>
<h1 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h1><p>如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。</p>
<p>总的来说，简单地重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。</p>
<p>你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。</p>
<p>有许多网上的以及本地的用户群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。</p>
<p>另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。</p>
<p>对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名用户。根本不可能由一个人来处理来自上万名用户的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。</p>
<h1 id="如何更好地回答问题"><a href="#如何更好地回答问题" class="headerlink" title="如何更好地回答问题"></a>如何更好地回答问题</h1><p><strong>态度和善一点。</strong> 问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p>
<p><strong>对初犯者私下回复。</strong> 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。</p>
<p><strong>如果你不确定，一定要说出来！</strong> 一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p>
<p><strong>如果帮不了忙，也别妨碍他。</strong> 不要在实际步骤上开玩笑，那样也许会毁了提问者的设置 —— 有些可怜的呆瓜会把它当成真的指令。</p>
<p><strong>试探性的反问以引出更多的细节。</strong> 如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。</p>
<p>尽管对那些懒虫抱怨一声 RTFM 是正当的，但能给出文档的链接（即使只是建议个 Google 搜索关键词）会更好。</p>
<p><strong>如果你决定回答，就请给出好的答案。</strong> 当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。</p>
<p><strong>正面地回答问题！</strong> 如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 <code>试试看 A 或是 B</code> 或者 <code>试试 X 、 Y 、 Z 、 A 、 B 、 C</code> 并附上一个链接一点用都没有。</p>
<p><strong>帮助你的社区从问题中学习。</strong> 当回复一个好问题时，问问自己<code>如何修改相关文件或常见问题文件以免再次解答同样的问题？</code>，接着再向文件维护者发一份补丁。</p>
<p>如果你在研究一番后才作出了回答，<strong>展现你的技巧而不是直接端出结果</strong>。毕竟<code>授人以鱼不如授人以渔</code>。</p>
<h1 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h1><p>如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/">Unix 系统和网络基本原理</a>。</p>
<p>当你发布软件或补丁时，试着按<a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html">软件发布实践</a>操作。</p>
<h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><p>Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。</p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>恢复 KDE 应用程序菜单栏</title>
    <url>/blog/2023/01/24/%E6%81%A2%E5%A4%8D-KDE-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%8F%9C%E5%8D%95%E6%A0%8F/</url>
    <content><![CDATA[<p>在 KDE Plasma 5.9 及之后的版本中，如果添加了<code>标题栏按钮</code>或<code>应用程序菜单组件</code>后，即使移除这些组件，应用程序菜单栏也不会自动恢复。</p>
<span id="more"></span>
<h1 id="恢复方法"><a href="#恢复方法" class="headerlink" title="恢复方法"></a>恢复方法</h1><ol>
<li>打开”设置”</li>
<li>点击”开机与关机”</li>
<li>点击”后台服务”</li>
<li>去除勾选”应用程序菜单守护程序”</li>
<li>切换”应用程序菜单守护程序”为未运行状态</li>
<li>点击”应用”</li>
</ol>
<p>此时大部分应用程序的菜单栏应该会出现，但可能仍会有小部分未出现。<br>打开没有出现应用程序菜单栏的应用，按<code>Ctrl+M</code>即可显示菜单栏（如果不行可以尝试多按几次）</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/383093876">https://zhuanlan.zhihu.com/p/383093876</a><br><a href="https://askubuntu.com/questions/30180/menubar-hidden-in-all-kde-apps">https://askubuntu.com/questions/30180/menubar-hidden-in-all-kde-apps</a></p>
</blockquote>
]]></content>
      <categories>
        <category>计算机</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
